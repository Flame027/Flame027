/*
 * $Header$
 *
 * DO NOT EDIT
 * automagically generated from the projectDefinition: stx_libbasic.
 */
#define __INDIRECTVMINITCALLS__
#include <stc.h>

#ifdef WIN32
# pragma codeseg INITCODE "INITCODE"
#endif

#if defined(INIT_TEXT_SECTION) || defined(DLL_EXPORT)
DLL_EXPORT void _libstx_libbasic_Init() INIT_TEXT_SECTION;
DLL_EXPORT void _libstx_libbasic_InitDefinition() INIT_TEXT_SECTION;
#endif

extern void _Autoload_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Object_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ProtoObject_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AbstractOperatingSystem_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AbstractSourceFileReader_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Annotation_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Behavior_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Boolean_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoder_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ClassBuilder_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ClassCategoryReader_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CmdLineOption_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CmdLineParser_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Collection_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ConfigurableFeatures_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Context_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Continuation_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Delay_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ExecutableFunction_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ExternalAddress_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ExternalLibrary_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Filename_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _GenericException_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Geometric_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InlineObject_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InterestConverter_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Link_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Lookup_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Magnitude_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Message_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MiniDebugger_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MiniInspector_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NameSpace_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OSErrorHolder_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OSProcess_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ObjectMemory_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PackageId_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PolymorphicInlineCache_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ProcessorScheduler_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ProgrammingLanguage_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Project_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ProjectDefinition_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ReadEvalPrintLoop_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AbstractLock_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _RecursionLock_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Semaphore_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SharedPool_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Signal_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Smalltalk_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _StandaloneStartup_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Stream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SystemChangeNotifier_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UndefinedObject_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UserMessage_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Visitor_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _VoidObject_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AbstractTime_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ApplicationDefinition_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ArithmeticValue_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AspectVisitor_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AutoDeletedFilename_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Bag_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _BlockContext_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _BuiltinLookup_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Character_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO10646_1371_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__SingleByteEncoder_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__TwoByteEncoder_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CompiledCode_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ControlInterrupt_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Date_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _EventSemaphore_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Exception_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ExternalFunction_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _False_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _FolderForProjectsDefinition_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _HashStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InlineObjectPrototype_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _JavaPackage_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _KeyedCollection_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _LibraryDefinition_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _LookupKey_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MessageSend_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MiniLogger_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NamespaceAwareLookup_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NoHandlerError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Notification_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OSHandle_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PeekableStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Process_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _QuerySignal_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Rectangle_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SequenceableCollection_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Set_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SmalltalkChunkFileSourceReader_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SmalltalkLanguage_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _StandaloneStartupHeadless_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _True_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UnixFilename_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WeakInterestConverter_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ArrayedCollection_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Association_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Block_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CascadingNotification_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ASCII_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__CP437_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__EBCDIC_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO10646_137to_137UTF16BE_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO10646_137to_137UTF8_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_1371_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_13710_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_13711_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_13713_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_13714_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_13715_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_13716_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_1372_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_1373_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_1374_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_1375_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_1376_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_1377_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_1378_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__KOI8_137R_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__MAC_137Roman_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__MS_137Ansi_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__MS_137Arabic_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__MS_137Baltic_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__MS_137Cyrillic_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__MS_137EastEuropean_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__MS_137Greek_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__MS_137Hebrew_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__MS_137Symbol_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__MS_137Turkish_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ClassDescription_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Complex_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ControlRequest_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Dictionary_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _EncodedStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _EndOfStreamNotification_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Error_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ExternalFunctionCallback_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ExternalLibraryFunction_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _HaltInterrupt_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _IdentitySet_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _LinkedList_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MD5Stream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Method_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MethodDictionary_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NaiveRomanNumberFormatNotification_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Number_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OSFileHandle_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ObjectCoder_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OrderedCollection_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OrderedSet_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Point_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PositionableStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ProceedingNotification_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Query_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ReadOnlySequenceableCollection_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _RecursiveStoreError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SHA1Stream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Time_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _TimeoutNotification_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Timestamp_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UnhandledAttributeInLiteralArrayErrorSignal_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UserConfirmation_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UserInterrupt_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UserNotification_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _YesToAllConfirmation_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _stx_137libbasic_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AbortAllOperationRequest_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AbortAllOperationWantedQuery_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AbstractSourceFileWriter_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ActivityNotification_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Array_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _BitArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _BreakPointInterrupt_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO10646_137to_137UTF16LE_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO10646_137to_137UTF8_137MAC_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO10646_137to_137XMLUTF8_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__ISO8859_1379_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderImplementations__KOI8_137U_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CheapBlock_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CmdLineOptionError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Fraction_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _GetOpt_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _IdentityDictionary_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InlineObjectClassDescription_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Integer_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Interval_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _IsDebuggingQuery_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _LimitedPrecisionReal_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _LoadInProgressQuery_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MeasurementValue_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MetaNumber_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Metaclass_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MethodWithBreakpoints_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ObsoleteMethodCallWarning_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OrderedDictionary_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OsError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PluginSupport_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ProceedableError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _QueryWithoutDefault_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ReadStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _RecursionError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _RecursiveExceptionError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _RestartProcessRequest_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SameForAllNotification_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SemaphoreSet_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SignalSet_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SnapshotError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SortedCollection_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _StringCollection_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _TZTimestamp_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _TerminateProcessRequest_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _TimeDuration_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UninterpretedBytes_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UserInformation_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UtcTimestamp_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _VMInternalError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _VarArgBlock_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Warning_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WeakArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WeakIdentitySet_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WeakValueDictionary_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WriteStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AbortOperationRequest_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AbstractNumberVector_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AllocationFailure_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AutoloadMetaclass_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _BooleanArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ByteArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterWriteStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Class_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ClassBuildWarning_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ClassLoadInProgressQuery_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ConversionError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _DeepCopyError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ExceptionHandlerSet_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ExecutionError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ExternalBytes_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _FixedPoint_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Float_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ImmutableArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Infinity_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InvalidPatchError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _LargeInteger_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _LongFloat_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OSSignalInterrupt_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OsIllegalOperation_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OsInaccessibleError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OsInvalidArgumentsError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OsNeedRetryError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OsNoResourcesError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OsNotification_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OsTransferFaultError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PackageLoadError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PackageLoadInProgressQuery_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PrivateMetaclass_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ProceedError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ReadWriteStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ShortFloat_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SmallInteger_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SmalltalkChunkFileSourceWriter_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SomeNumber_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _StreamError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _TimeoutError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UserPreferences_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _VarArgCheapBlock_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WeakIdentityDictionary_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WeakValueIdentityDictionary_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AmbiguousMessage_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ArgumentError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ArithmeticError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AssertionFailedError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterEncoderError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ClassBuildError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ContextError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _DateConversionError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _DoubleArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ElementBoundsError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _EndOfStreamError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ExternalStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ExternalStructure_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _FloatArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ImmutableByteArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _IncompleteNextCountError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InvalidCodeError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InvalidModeError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InvalidOperationError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InvalidTypeError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MallocFailure_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MessageNotUnderstood_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MethodNotAppropriateError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NoModificationError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NonBooleanReceiverError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NotFoundError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NumberConversionError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OpenError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PackageNotFoundError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PositionError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PositionOutOfBoundsError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PrimitiveFailure_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ReadError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Registry_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SignalError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SignedByteArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _StreamIOError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _StreamNotOpenError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _String_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SubclassResponsibilityError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _TimeConversionError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _TwoByteString_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UnboxedIntegerArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UnimplementedFunctionalityError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UnprotectedExternalBytes_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WeakDependencyDictionary_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WriteError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _AbstractClassInstantiationError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _BadLiteralsError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CachingRegistry_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CannotResumeError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CannotReturnError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _DecodingError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _DomainError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _EncodingError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _FileDoesNotExistException_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _FileStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _HandleRegistry_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ImmutableString_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _IndexNotFoundError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _IntegerArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InvalidByteCodeError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InvalidInstructionError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InvalidReadError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InvalidWriteError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _KeyNotFoundError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _LongIntegerArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _MissingClassInLiteralArrayErrorSignal_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NoByteCodeError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _TTYConstants_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _TTYAttributes_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NonPositionableExternalStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NumberFormatError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PTYOpenError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PackageNotCompatibleError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _RangeError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SignedIntegerArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SignedLongIntegerArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SignedWordArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Symbol_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UnboundedExternalStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Unicode16String_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UnorderedNumbersError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WordArray_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WrongNumberOfArgumentsError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _WrongProceedabilityError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _CharacterRangeError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _DirectoryStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ImaginaryResultError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _InvalidEncodingError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _NonIntegerIndexError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OverflowError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _PipeStream_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _RomanNumberFormatError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _SubscriptOutOfBoundsError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UnderflowError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _ZeroDivide_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _BadRomanNumberFormatError_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
#ifdef UNIX
extern void _UnixFileDescriptorHandle_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UnixFileHandle_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _UnixOperatingSystem_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OSXOperatingSystem_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
#endif /* UNIX */
#ifdef WIN32
extern void _PCFilename_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Win32Constants_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Win32Handle_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Win32FILEHandle_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _Win32OperatingSystem_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
#endif /* WIN32 */
#ifdef VMS
extern void _OpenVMSFileHandle_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OpenVMSFilename_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
extern void _OpenVMSOperatingSystem_Init(int pass, struct __vmData__ *__pRT__, OBJ snd);
#endif /* VMS */


void _libstx_libbasic_InitDefinition(int pass, struct __vmData__ *__pRT__, OBJ snd)
{
  __BEGIN_PACKAGE2__("libstx_libbasic__DFN", _libstx_libbasic_InitDefinition, "stx:libbasic");
    _stx_137libbasic_Init(pass,__pRT__,snd);

  __END_PACKAGE__();
}

void _libstx_libbasic_Init(int pass, struct __vmData__ *__pRT__, OBJ snd)
{
  __BEGIN_PACKAGE2__("libstx_libbasic", _libstx_libbasic_Init, "stx:libbasic");
    _Autoload_Init(pass,__pRT__,snd);
    _Object_Init(pass,__pRT__,snd);
    _ProtoObject_Init(pass,__pRT__,snd);
    _AbstractOperatingSystem_Init(pass,__pRT__,snd);
    _AbstractSourceFileReader_Init(pass,__pRT__,snd);
    _Annotation_Init(pass,__pRT__,snd);
    _Behavior_Init(pass,__pRT__,snd);
    _Boolean_Init(pass,__pRT__,snd);
    _CharacterEncoder_Init(pass,__pRT__,snd);
    _ClassBuilder_Init(pass,__pRT__,snd);
    _ClassCategoryReader_Init(pass,__pRT__,snd);
    _CmdLineOption_Init(pass,__pRT__,snd);
    _CmdLineParser_Init(pass,__pRT__,snd);
    _Collection_Init(pass,__pRT__,snd);
    _ConfigurableFeatures_Init(pass,__pRT__,snd);
    _Context_Init(pass,__pRT__,snd);
    _Continuation_Init(pass,__pRT__,snd);
    _Delay_Init(pass,__pRT__,snd);
    _ExecutableFunction_Init(pass,__pRT__,snd);
    _ExternalAddress_Init(pass,__pRT__,snd);
    _ExternalLibrary_Init(pass,__pRT__,snd);
    _Filename_Init(pass,__pRT__,snd);
    _GenericException_Init(pass,__pRT__,snd);
    _Geometric_Init(pass,__pRT__,snd);
    _InlineObject_Init(pass,__pRT__,snd);
    _InterestConverter_Init(pass,__pRT__,snd);
    _Link_Init(pass,__pRT__,snd);
    _Lookup_Init(pass,__pRT__,snd);
    _Magnitude_Init(pass,__pRT__,snd);
    _Message_Init(pass,__pRT__,snd);
    _MiniDebugger_Init(pass,__pRT__,snd);
    _MiniInspector_Init(pass,__pRT__,snd);
    _NameSpace_Init(pass,__pRT__,snd);
    _OSErrorHolder_Init(pass,__pRT__,snd);
    _OSProcess_Init(pass,__pRT__,snd);
    _ObjectMemory_Init(pass,__pRT__,snd);
    _PackageId_Init(pass,__pRT__,snd);
    _PolymorphicInlineCache_Init(pass,__pRT__,snd);
    _ProcessorScheduler_Init(pass,__pRT__,snd);
    _ProgrammingLanguage_Init(pass,__pRT__,snd);
    _Project_Init(pass,__pRT__,snd);
    _ProjectDefinition_Init(pass,__pRT__,snd);
    _ReadEvalPrintLoop_Init(pass,__pRT__,snd);
    _AbstractLock_Init(pass,__pRT__,snd);
    _RecursionLock_Init(pass,__pRT__,snd);
    _Semaphore_Init(pass,__pRT__,snd);
    _SharedPool_Init(pass,__pRT__,snd);
    _Signal_Init(pass,__pRT__,snd);
    _Smalltalk_Init(pass,__pRT__,snd);
    _StandaloneStartup_Init(pass,__pRT__,snd);
    _Stream_Init(pass,__pRT__,snd);
    _SystemChangeNotifier_Init(pass,__pRT__,snd);
    _UndefinedObject_Init(pass,__pRT__,snd);
    _UserMessage_Init(pass,__pRT__,snd);
    _Visitor_Init(pass,__pRT__,snd);
    _VoidObject_Init(pass,__pRT__,snd);
    _AbstractTime_Init(pass,__pRT__,snd);
    _ApplicationDefinition_Init(pass,__pRT__,snd);
    _ArithmeticValue_Init(pass,__pRT__,snd);
    _AspectVisitor_Init(pass,__pRT__,snd);
    _AutoDeletedFilename_Init(pass,__pRT__,snd);
    _Bag_Init(pass,__pRT__,snd);
    _BlockContext_Init(pass,__pRT__,snd);
    _BuiltinLookup_Init(pass,__pRT__,snd);
    _Character_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO10646_1371_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__SingleByteEncoder_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__TwoByteEncoder_Init(pass,__pRT__,snd);
    _CompiledCode_Init(pass,__pRT__,snd);
    _ControlInterrupt_Init(pass,__pRT__,snd);
    _Date_Init(pass,__pRT__,snd);
    _EventSemaphore_Init(pass,__pRT__,snd);
    _Exception_Init(pass,__pRT__,snd);
    _ExternalFunction_Init(pass,__pRT__,snd);
    _False_Init(pass,__pRT__,snd);
    _FolderForProjectsDefinition_Init(pass,__pRT__,snd);
    _HashStream_Init(pass,__pRT__,snd);
    _InlineObjectPrototype_Init(pass,__pRT__,snd);
    _JavaPackage_Init(pass,__pRT__,snd);
    _KeyedCollection_Init(pass,__pRT__,snd);
    _LibraryDefinition_Init(pass,__pRT__,snd);
    _LookupKey_Init(pass,__pRT__,snd);
    _MessageSend_Init(pass,__pRT__,snd);
    _MiniLogger_Init(pass,__pRT__,snd);
    _NamespaceAwareLookup_Init(pass,__pRT__,snd);
    _NoHandlerError_Init(pass,__pRT__,snd);
    _Notification_Init(pass,__pRT__,snd);
    _OSHandle_Init(pass,__pRT__,snd);
    _PeekableStream_Init(pass,__pRT__,snd);
    _Process_Init(pass,__pRT__,snd);
    _QuerySignal_Init(pass,__pRT__,snd);
    _Rectangle_Init(pass,__pRT__,snd);
    _SequenceableCollection_Init(pass,__pRT__,snd);
    _Set_Init(pass,__pRT__,snd);
    _SmalltalkChunkFileSourceReader_Init(pass,__pRT__,snd);
    _SmalltalkLanguage_Init(pass,__pRT__,snd);
    _StandaloneStartupHeadless_Init(pass,__pRT__,snd);
    _True_Init(pass,__pRT__,snd);
    _UnixFilename_Init(pass,__pRT__,snd);
    _WeakInterestConverter_Init(pass,__pRT__,snd);
    _ArrayedCollection_Init(pass,__pRT__,snd);
    _Association_Init(pass,__pRT__,snd);
    _Block_Init(pass,__pRT__,snd);
    _CascadingNotification_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ASCII_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__CP437_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__EBCDIC_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO10646_137to_137UTF16BE_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO10646_137to_137UTF8_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_1371_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_13710_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_13711_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_13713_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_13714_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_13715_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_13716_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_1372_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_1373_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_1374_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_1375_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_1376_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_1377_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_1378_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__KOI8_137R_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__MAC_137Roman_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__MS_137Ansi_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__MS_137Arabic_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__MS_137Baltic_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__MS_137Cyrillic_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__MS_137EastEuropean_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__MS_137Greek_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__MS_137Hebrew_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__MS_137Symbol_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__MS_137Turkish_Init(pass,__pRT__,snd);
    _ClassDescription_Init(pass,__pRT__,snd);
    _Complex_Init(pass,__pRT__,snd);
    _ControlRequest_Init(pass,__pRT__,snd);
    _Dictionary_Init(pass,__pRT__,snd);
    _EncodedStream_Init(pass,__pRT__,snd);
    _EndOfStreamNotification_Init(pass,__pRT__,snd);
    _Error_Init(pass,__pRT__,snd);
    _ExternalFunctionCallback_Init(pass,__pRT__,snd);
    _ExternalLibraryFunction_Init(pass,__pRT__,snd);
    _HaltInterrupt_Init(pass,__pRT__,snd);
    _IdentitySet_Init(pass,__pRT__,snd);
    _LinkedList_Init(pass,__pRT__,snd);
    _MD5Stream_Init(pass,__pRT__,snd);
    _Method_Init(pass,__pRT__,snd);
    _MethodDictionary_Init(pass,__pRT__,snd);
    _NaiveRomanNumberFormatNotification_Init(pass,__pRT__,snd);
    _Number_Init(pass,__pRT__,snd);
    _OSFileHandle_Init(pass,__pRT__,snd);
    _ObjectCoder_Init(pass,__pRT__,snd);
    _OrderedCollection_Init(pass,__pRT__,snd);
    _OrderedSet_Init(pass,__pRT__,snd);
    _Point_Init(pass,__pRT__,snd);
    _PositionableStream_Init(pass,__pRT__,snd);
    _ProceedingNotification_Init(pass,__pRT__,snd);
    _Query_Init(pass,__pRT__,snd);
    _ReadOnlySequenceableCollection_Init(pass,__pRT__,snd);
    _RecursiveStoreError_Init(pass,__pRT__,snd);
    _SHA1Stream_Init(pass,__pRT__,snd);
    _Time_Init(pass,__pRT__,snd);
    _TimeoutNotification_Init(pass,__pRT__,snd);
    _Timestamp_Init(pass,__pRT__,snd);
    _UnhandledAttributeInLiteralArrayErrorSignal_Init(pass,__pRT__,snd);
    _UserConfirmation_Init(pass,__pRT__,snd);
    _UserInterrupt_Init(pass,__pRT__,snd);
    _UserNotification_Init(pass,__pRT__,snd);
    _YesToAllConfirmation_Init(pass,__pRT__,snd);
    _stx_137libbasic_Init(pass,__pRT__,snd);
    _AbortAllOperationRequest_Init(pass,__pRT__,snd);
    _AbortAllOperationWantedQuery_Init(pass,__pRT__,snd);
    _AbstractSourceFileWriter_Init(pass,__pRT__,snd);
    _ActivityNotification_Init(pass,__pRT__,snd);
    _Array_Init(pass,__pRT__,snd);
    _BitArray_Init(pass,__pRT__,snd);
    _BreakPointInterrupt_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO10646_137to_137UTF16LE_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO10646_137to_137UTF8_137MAC_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO10646_137to_137XMLUTF8_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__ISO8859_1379_Init(pass,__pRT__,snd);
    _CharacterEncoderImplementations__KOI8_137U_Init(pass,__pRT__,snd);
    _CheapBlock_Init(pass,__pRT__,snd);
    _CmdLineOptionError_Init(pass,__pRT__,snd);
    _Fraction_Init(pass,__pRT__,snd);
    _GetOpt_Init(pass,__pRT__,snd);
    _IdentityDictionary_Init(pass,__pRT__,snd);
    _InlineObjectClassDescription_Init(pass,__pRT__,snd);
    _Integer_Init(pass,__pRT__,snd);
    _Interval_Init(pass,__pRT__,snd);
    _IsDebuggingQuery_Init(pass,__pRT__,snd);
    _LimitedPrecisionReal_Init(pass,__pRT__,snd);
    _LoadInProgressQuery_Init(pass,__pRT__,snd);
    _MeasurementValue_Init(pass,__pRT__,snd);
    _MetaNumber_Init(pass,__pRT__,snd);
    _Metaclass_Init(pass,__pRT__,snd);
    _MethodWithBreakpoints_Init(pass,__pRT__,snd);
    _ObsoleteMethodCallWarning_Init(pass,__pRT__,snd);
    _OrderedDictionary_Init(pass,__pRT__,snd);
    _OsError_Init(pass,__pRT__,snd);
    _PluginSupport_Init(pass,__pRT__,snd);
    _ProceedableError_Init(pass,__pRT__,snd);
    _QueryWithoutDefault_Init(pass,__pRT__,snd);
    _ReadStream_Init(pass,__pRT__,snd);
    _RecursionError_Init(pass,__pRT__,snd);
    _RecursiveExceptionError_Init(pass,__pRT__,snd);
    _RestartProcessRequest_Init(pass,__pRT__,snd);
    _SameForAllNotification_Init(pass,__pRT__,snd);
    _SemaphoreSet_Init(pass,__pRT__,snd);
    _SignalSet_Init(pass,__pRT__,snd);
    _SnapshotError_Init(pass,__pRT__,snd);
    _SortedCollection_Init(pass,__pRT__,snd);
    _StringCollection_Init(pass,__pRT__,snd);
    _TZTimestamp_Init(pass,__pRT__,snd);
    _TerminateProcessRequest_Init(pass,__pRT__,snd);
    _TimeDuration_Init(pass,__pRT__,snd);
    _UninterpretedBytes_Init(pass,__pRT__,snd);
    _UserInformation_Init(pass,__pRT__,snd);
    _UtcTimestamp_Init(pass,__pRT__,snd);
    _VMInternalError_Init(pass,__pRT__,snd);
    _VarArgBlock_Init(pass,__pRT__,snd);
    _Warning_Init(pass,__pRT__,snd);
    _WeakArray_Init(pass,__pRT__,snd);
    _WeakIdentitySet_Init(pass,__pRT__,snd);
    _WeakValueDictionary_Init(pass,__pRT__,snd);
    _WriteStream_Init(pass,__pRT__,snd);
    _AbortOperationRequest_Init(pass,__pRT__,snd);
    _AbstractNumberVector_Init(pass,__pRT__,snd);
    _AllocationFailure_Init(pass,__pRT__,snd);
    _AutoloadMetaclass_Init(pass,__pRT__,snd);
    _BooleanArray_Init(pass,__pRT__,snd);
    _ByteArray_Init(pass,__pRT__,snd);
    _CharacterArray_Init(pass,__pRT__,snd);
    _CharacterWriteStream_Init(pass,__pRT__,snd);
    _Class_Init(pass,__pRT__,snd);
    _ClassBuildWarning_Init(pass,__pRT__,snd);
    _ClassLoadInProgressQuery_Init(pass,__pRT__,snd);
    _ConversionError_Init(pass,__pRT__,snd);
    _DeepCopyError_Init(pass,__pRT__,snd);
    _ExceptionHandlerSet_Init(pass,__pRT__,snd);
    _ExecutionError_Init(pass,__pRT__,snd);
    _ExternalBytes_Init(pass,__pRT__,snd);
    _FixedPoint_Init(pass,__pRT__,snd);
    _Float_Init(pass,__pRT__,snd);
    _ImmutableArray_Init(pass,__pRT__,snd);
    _Infinity_Init(pass,__pRT__,snd);
    _InvalidPatchError_Init(pass,__pRT__,snd);
    _LargeInteger_Init(pass,__pRT__,snd);
    _LongFloat_Init(pass,__pRT__,snd);
    _OSSignalInterrupt_Init(pass,__pRT__,snd);
    _OsIllegalOperation_Init(pass,__pRT__,snd);
    _OsInaccessibleError_Init(pass,__pRT__,snd);
    _OsInvalidArgumentsError_Init(pass,__pRT__,snd);
    _OsNeedRetryError_Init(pass,__pRT__,snd);
    _OsNoResourcesError_Init(pass,__pRT__,snd);
    _OsNotification_Init(pass,__pRT__,snd);
    _OsTransferFaultError_Init(pass,__pRT__,snd);
    _PackageLoadError_Init(pass,__pRT__,snd);
    _PackageLoadInProgressQuery_Init(pass,__pRT__,snd);
    _PrivateMetaclass_Init(pass,__pRT__,snd);
    _ProceedError_Init(pass,__pRT__,snd);
    _ReadWriteStream_Init(pass,__pRT__,snd);
    _ShortFloat_Init(pass,__pRT__,snd);
    _SmallInteger_Init(pass,__pRT__,snd);
    _SmalltalkChunkFileSourceWriter_Init(pass,__pRT__,snd);
    _SomeNumber_Init(pass,__pRT__,snd);
    _StreamError_Init(pass,__pRT__,snd);
    _TimeoutError_Init(pass,__pRT__,snd);
    _UserPreferences_Init(pass,__pRT__,snd);
    _VarArgCheapBlock_Init(pass,__pRT__,snd);
    _WeakIdentityDictionary_Init(pass,__pRT__,snd);
    _WeakValueIdentityDictionary_Init(pass,__pRT__,snd);
    _AmbiguousMessage_Init(pass,__pRT__,snd);
    _ArgumentError_Init(pass,__pRT__,snd);
    _ArithmeticError_Init(pass,__pRT__,snd);
    _AssertionFailedError_Init(pass,__pRT__,snd);
    _CharacterEncoderError_Init(pass,__pRT__,snd);
    _ClassBuildError_Init(pass,__pRT__,snd);
    _ContextError_Init(pass,__pRT__,snd);
    _DateConversionError_Init(pass,__pRT__,snd);
    _DoubleArray_Init(pass,__pRT__,snd);
    _ElementBoundsError_Init(pass,__pRT__,snd);
    _EndOfStreamError_Init(pass,__pRT__,snd);
    _ExternalStream_Init(pass,__pRT__,snd);
    _ExternalStructure_Init(pass,__pRT__,snd);
    _FloatArray_Init(pass,__pRT__,snd);
    _ImmutableByteArray_Init(pass,__pRT__,snd);
    _IncompleteNextCountError_Init(pass,__pRT__,snd);
    _InvalidCodeError_Init(pass,__pRT__,snd);
    _InvalidModeError_Init(pass,__pRT__,snd);
    _InvalidOperationError_Init(pass,__pRT__,snd);
    _InvalidTypeError_Init(pass,__pRT__,snd);
    _MallocFailure_Init(pass,__pRT__,snd);
    _MessageNotUnderstood_Init(pass,__pRT__,snd);
    _MethodNotAppropriateError_Init(pass,__pRT__,snd);
    _NoModificationError_Init(pass,__pRT__,snd);
    _NonBooleanReceiverError_Init(pass,__pRT__,snd);
    _NotFoundError_Init(pass,__pRT__,snd);
    _NumberConversionError_Init(pass,__pRT__,snd);
    _OpenError_Init(pass,__pRT__,snd);
    _PackageNotFoundError_Init(pass,__pRT__,snd);
    _PositionError_Init(pass,__pRT__,snd);
    _PositionOutOfBoundsError_Init(pass,__pRT__,snd);
    _PrimitiveFailure_Init(pass,__pRT__,snd);
    _ReadError_Init(pass,__pRT__,snd);
    _Registry_Init(pass,__pRT__,snd);
    _SignalError_Init(pass,__pRT__,snd);
    _SignedByteArray_Init(pass,__pRT__,snd);
    _StreamIOError_Init(pass,__pRT__,snd);
    _StreamNotOpenError_Init(pass,__pRT__,snd);
    _String_Init(pass,__pRT__,snd);
    _SubclassResponsibilityError_Init(pass,__pRT__,snd);
    _TimeConversionError_Init(pass,__pRT__,snd);
    _TwoByteString_Init(pass,__pRT__,snd);
    _UnboxedIntegerArray_Init(pass,__pRT__,snd);
    _UnimplementedFunctionalityError_Init(pass,__pRT__,snd);
    _UnprotectedExternalBytes_Init(pass,__pRT__,snd);
    _WeakDependencyDictionary_Init(pass,__pRT__,snd);
    _WriteError_Init(pass,__pRT__,snd);
    _AbstractClassInstantiationError_Init(pass,__pRT__,snd);
    _BadLiteralsError_Init(pass,__pRT__,snd);
    _CachingRegistry_Init(pass,__pRT__,snd);
    _CannotResumeError_Init(pass,__pRT__,snd);
    _CannotReturnError_Init(pass,__pRT__,snd);
    _DecodingError_Init(pass,__pRT__,snd);
    _DomainError_Init(pass,__pRT__,snd);
    _EncodingError_Init(pass,__pRT__,snd);
    _FileDoesNotExistException_Init(pass,__pRT__,snd);
    _FileStream_Init(pass,__pRT__,snd);
    _HandleRegistry_Init(pass,__pRT__,snd);
    _ImmutableString_Init(pass,__pRT__,snd);
    _IndexNotFoundError_Init(pass,__pRT__,snd);
    _IntegerArray_Init(pass,__pRT__,snd);
    _InvalidByteCodeError_Init(pass,__pRT__,snd);
    _InvalidInstructionError_Init(pass,__pRT__,snd);
    _InvalidReadError_Init(pass,__pRT__,snd);
    _InvalidWriteError_Init(pass,__pRT__,snd);
    _KeyNotFoundError_Init(pass,__pRT__,snd);
    _LongIntegerArray_Init(pass,__pRT__,snd);
    _MissingClassInLiteralArrayErrorSignal_Init(pass,__pRT__,snd);
    _NoByteCodeError_Init(pass,__pRT__,snd);
    _TTYConstants_Init(pass,__pRT__,snd);
    _TTYAttributes_Init(pass,__pRT__,snd);
    _NonPositionableExternalStream_Init(pass,__pRT__,snd);
    _NumberFormatError_Init(pass,__pRT__,snd);
    _PTYOpenError_Init(pass,__pRT__,snd);
    _PackageNotCompatibleError_Init(pass,__pRT__,snd);
    _RangeError_Init(pass,__pRT__,snd);
    _SignedIntegerArray_Init(pass,__pRT__,snd);
    _SignedLongIntegerArray_Init(pass,__pRT__,snd);
    _SignedWordArray_Init(pass,__pRT__,snd);
    _Symbol_Init(pass,__pRT__,snd);
    _UnboundedExternalStream_Init(pass,__pRT__,snd);
    _Unicode16String_Init(pass,__pRT__,snd);
    _UnorderedNumbersError_Init(pass,__pRT__,snd);
    _WordArray_Init(pass,__pRT__,snd);
    _WrongNumberOfArgumentsError_Init(pass,__pRT__,snd);
    _WrongProceedabilityError_Init(pass,__pRT__,snd);
    _CharacterRangeError_Init(pass,__pRT__,snd);
    _DirectoryStream_Init(pass,__pRT__,snd);
    _ImaginaryResultError_Init(pass,__pRT__,snd);
    _InvalidEncodingError_Init(pass,__pRT__,snd);
    _NonIntegerIndexError_Init(pass,__pRT__,snd);
    _OverflowError_Init(pass,__pRT__,snd);
    _PipeStream_Init(pass,__pRT__,snd);
    _RomanNumberFormatError_Init(pass,__pRT__,snd);
    _SubscriptOutOfBoundsError_Init(pass,__pRT__,snd);
    _UnderflowError_Init(pass,__pRT__,snd);
    _ZeroDivide_Init(pass,__pRT__,snd);
    _BadRomanNumberFormatError_Init(pass,__pRT__,snd);
#ifdef UNIX
    _UnixFileDescriptorHandle_Init(pass,__pRT__,snd);
    _UnixFileHandle_Init(pass,__pRT__,snd);
    _UnixOperatingSystem_Init(pass,__pRT__,snd);
    _OSXOperatingSystem_Init(pass,__pRT__,snd);
#endif /* UNIX */
#ifdef WIN32
    _PCFilename_Init(pass,__pRT__,snd);
    _Win32Constants_Init(pass,__pRT__,snd);
    _Win32Handle_Init(pass,__pRT__,snd);
    _Win32FILEHandle_Init(pass,__pRT__,snd);
    _Win32OperatingSystem_Init(pass,__pRT__,snd);
#endif /* WIN32 */
#ifdef VMS
    _OpenVMSFileHandle_Init(pass,__pRT__,snd);
    _OpenVMSFilename_Init(pass,__pRT__,snd);
    _OpenVMSOperatingSystem_Init(pass,__pRT__,snd);
#endif /* VMS */


  __END_PACKAGE__();
}
