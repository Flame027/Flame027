"{ Encoding: utf8 }"

"{ Package: 'stx:clients/Demos' }"

"{ NameSpace: CodingExamples_GUI }"

ApplicationModel subclass:#GraphColumn3DApplication
	instanceVariableNames:'stepX'
	classVariableNames:''
	poolDictionaries:''
	category:'examples-GUI-Graph'
!


!GraphColumn3DApplication class methodsFor:'interface specs'!

windowSpec
    "this window spec was automatically generated by the ST/X UIPainter"

    "do not manually edit this - the painter/builder may not be able to
     handle the specification if its corrupted."

    "
     UIPainter new openOnClass:CodingExamples_GUI::GraphColumn3DApplication andSelector:#windowSpec
     CodingExamples_GUI::GraphColumn3DApplication new openInterface:#windowSpec
    "
    "CodingExamples_GUI::GraphColumn3DApplication open"

    <resource: #canvas>

    ^
     
       #(#FullSpec
          #'window:' 
           #(#WindowSpec
              #'name:' 'Demo 3D'
              #'layout:' #(#LayoutFrame -68 0 151 0 680 0 710 0)
              #'label:' 'Demo 3D'
              #'min:' #(#Point 10 10)
              #'max:' #(#Point 1280 1024)
              #'bounds:' #(#Rectangle -68 151 681 711)
              #'menu:' #menu
              #'usePreferredExtent:' false
          )
          #'component:' 
           #(#SpecCollection
              #'collection:' 
               #(
                 #(#ViewSpec
                    #'name:' 'GraphView'
                    #'layout:' #(#LayoutFrame 200 0.0 30 0.0 0 1.0 0 1.0)
                    #'component:' 
                     #(#SpecCollection
                        #'collection:' 
                         #(
                           #(#ViewSpec
                              #'name:' 'RotateY'
                              #'layout:' #(#LayoutFrame 1 0.0 -170 1.0 19 0 -20 1.0)
                              #'component:' 
                               #(#SpecCollection
                                  #'collection:' 
                                   #(
                                     #(#LabelSpec
                                        #'name:' 'RotateYLabel'
                                        #'layout:' #(#LayoutFrame 0 0.0 0 0 0 1.0 22 0)
                                        #'label:' 'Y'
                                        #'resizeForLabel:' true
                                    )
                                     #(#ThumbWheelSpec
                                        #'name:' 'RotateYWheel'
                                        #'layout:' #(#LayoutFrame 0 0.0 22 0 0 1.0 0 1.0)
                                        #'model:' #rotY
                                        #'orientation:' #vertical
                                        #'start:' 0
                                        #'stop:' 360
                                        #'step:' 1
                                        #'level:' 1
                                        #'endlessRotation:' true
                                    )
                                  )
                              )
                          )
                           #(#ViewSpec
                              #'name:' 'RotateX'
                              #'layout:' #(#LayoutFrame 20 0 -18 1.0 170 0 0 1.0)
                              #'component:' 
                               #(#SpecCollection
                                  #'collection:' 
                                   #(
                                     #(#LabelSpec
                                        #'name:' 'RotateXLabel'
                                        #'layout:' #(#LayoutFrame 132 0 0 0.0 148 0 0 1.0)
                                        #'label:' 'X'
                                        #'resizeForLabel:' true
                                    )
                                     #(#ThumbWheelSpec
                                        #'name:' 'RotateXWheel'
                                        #'layout:' #(#LayoutFrame 0 0.0 0 0.0 130 0 0 1.0)
                                        #'model:' #rotX
                                        #'orientation:' #horizontal
                                        #'start:' 0
                                        #'stop:' 360
                                        #'step:' 1
                                        #'level:' 1
                                        #'endlessRotation:' true
                                    )
                                  )
                              )
                          )
                           #(#ViewSpec
                              #'name:' 'RotateZ'
                              #'layout:' #(#LayoutFrame -18 1.0 -170 1.0 0 1.0 -20 1.0)
                              #'component:' 
                               #(#SpecCollection
                                  #'collection:' 
                                   #(
                                     #(#LabelSpec
                                        #'name:' 'RotateZLabel'
                                        #'layout:' #(#LayoutFrame 0 0.0 0 0 0 1.0 22 0)
                                        #'label:' 'Z'
                                        #'resizeForLabel:' true
                                    )
                                     #(#ThumbWheelSpec
                                        #'name:' 'RotateZWheel'
                                        #'layout:' #(#LayoutFrame 0 0.0 22 0 0 1.0 0 1.0)
                                        #'model:' #rotZ
                                        #'orientation:' #vertical
                                        #'start:' 0
                                        #'stop:' 360
                                        #'step:' 1
                                        #'level:' 1
                                        #'endlessRotation:' true
                                    )
                                  )
                              )
                          )
                           #(#GraphColumnView3DSpec
                              #'name:' 'Graph3D'
                              #'layout:' #(#LayoutFrame 20 0.0 0 0.0 -20 1.0 -20 1.0)
                              #'model:' #listHolder
                              #'showGrid:' true
                              #'showDefaultMenu:' true
                              #'zoomY:' #zoomY
                              #'windowSize:' #windowSize
                              #'graphOriginX:' #originX
                              #'scrollUpdatesOriginX:' true
                              #'rotateX:' #rotX
                              #'rotateY:' #rotY
                              #'rotateZ:' #rotZ
                              #'zoomZ:' #zoomZ
                          )
                           #(#ViewSpec
                              #'name:' 'Scrolling'
                              #'layout:' #(#LayoutFrame 293 0 -18 1.0 396 0 0 1.0)
                              #'component:' 
                               #(#SpecCollection
                                  #'collection:' 
                                   #(
                                     #(#ArrowButtonSpec
                                        #'name:' 'ScrollLeft'
                                        #'layout:' #(#LayoutFrame 0 0.0 0 0.0 20 0 0 1.0)
                                        #'model:' #'doScroll:'
                                        #'isTriggerOnDown:' true
                                        #'actionValue:' '-'
                                        #'direction:' #left
                                    )
                                     #(#LabelSpec
                                        #'name:' 'ScrollLabel'
                                        #'layout:' #(#LayoutFrame 22 0.0 0 0.0 -22 1.0 0 1.0)
                                        #'labelChannel:' #originXLabel
                                        #'level:' 1
                                    )
                                     #(#ArrowButtonSpec
                                        #'name:' 'ScrollRight'
                                        #'layout:' #(#LayoutFrame -20 1.0 0 0.0 0 1.0 0 1.0)
                                        #'model:' #'doScroll:'
                                        #'isTriggerOnDown:' true
                                        #'actionValue:' '+'
                                        #'direction:' #right
                                    )
                                  )
                              )
                          )
                        )
                    )
                    #'level:' 1
                )
                 #(#DataSetSpec
                    #'name:' 'DataSet'
                    #'layout:' #(#LayoutFrame 0 0.0 30 0.0 200 0 -150 1.0)
                    #'model:' #selectionHolder
                    #'menu:' #dataSetMenu
                    #'hasHorizontalScrollBar:' false
                    #'hasVerticalScrollBar:' false
                    #'dataList:' #listHolder
                    #'has3Dsepartors:' true
                    #'multipleSelectOk:' true
                    #'beDependentOfRows:' true
                    #'columns:' 
                     #(
                       #(#DataSetColumnSpec
                          #'rendererType:' #rowSelector
                          #'backgroundSelector:' #foregroundColor
                      )
                       #(#DataSetColumnSpec
                          #'label:' 'Shown'
                          #'editorType:' #CheckToggle
                          #'rendererType:' #CheckToggle
                          #'model:' #shown
                      )
                       #(#DataSetColumnSpec
                          #'label:' 'Name'
                          #'model:' #name
                          #'canSelect:' false
                      )
                    )
                )
                 #(#MenuPanelSpec
                    #'name:' 'menuPanel1'
                    #'layout:' #(#LayoutFrame 0 0.0 0 0.0 0 1.0 29 0)
                    #'menu:' #menuToolbar
                )
                 #(#FramedBoxSpec
                    #'name:' 'SettingsFrame'
                    #'layout:' #(#LayoutFrame 0 0.0 -150 1.0 200 0 0 1.0)
                    #'component:' 
                     #(#SpecCollection
                        #'collection:' 
                         #(
                           #(#LabelSpec
                              #'name:' 'WindowSzLbl'
                              #'layout:' #(#Point 17 25)
                              #'label:' 'Number of Rows Y:'
                              #'resizeForLabel:' true
                          )
                           #(#LabelSpec
                              #'name:' 'WindowSizeLblHolder'
                              #'layout:' #(#LayoutFrame 104 0 45 0 162 0 67 0)
                              #'labelChannel:' #windowSizeLabel
                              #'level:' 1
                              #'adjust:' #left
                          )
                           #(#ArrowButtonSpec
                              #'name:' 'WindowSizeMinus'
                              #'layout:' #(#LayoutFrame 80 0 45 0 102 0 67 0)
                              #'model:' #'doChangeWindowSize:'
                              #'isTriggerOnDown:' true
                              #'autoRepeat:' true
                              #'actionValue:' '-'
                              #'direction:' #left
                          )
                           #(#ArrowButtonSpec
                              #'name:' 'WindowSzPlus'
                              #'layout:' #(#LayoutFrame 163 0 45 0 185 0 67 0)
                              #'model:' #'doChangeWindowSize:'
                              #'isTriggerOnDown:' true
                              #'autoRepeat:' true
                              #'actionValue:' '+'
                              #'direction:' #right
                          )
                           #(#LabelSpec
                              #'name:' 'ZoomYLbl'
                              #'layout:' #(#Point 17 82)
                              #'label:' 'Zoom Y:'
                              #'resizeForLabel:' true
                          )
                           #(#ArrowButtonSpec
                              #'name:' 'ZoomYMinus'
                              #'layout:' #(#LayoutFrame 80 0 79 0 102 0 101 0)
                              #'model:' #'doZoomY:'
                              #'isTriggerOnDown:' true
                              #'autoRepeat:' true
                              #'actionValue:' '-'
                              #'direction:' #left
                          )
                           #(#LabelSpec
                              #'name:' 'ZoomYLblHolder'
                              #'layout:' #(#LayoutFrame 104 0 79 0 162 0 101 0)
                              #'labelChannel:' #zoomYLabel
                              #'level:' 1
                              #'adjust:' #left
                          )
                           #(#ArrowButtonSpec
                              #'name:' 'ZoomYPlus'
                              #'layout:' #(#LayoutFrame 163 0 79 0 185 0 101 0)
                              #'model:' #'doZoomY:'
                              #'isTriggerOnDown:' true
                              #'autoRepeat:' true
                              #'actionValue:' '+'
                              #'direction:' #right
                          )
                           #(#LabelSpec
                              #'name:' 'ZoomZLbl'
                              #'layout:' #(#Point 17 107)
                              #'label:' 'Zoom Z:'
                              #'resizeForLabel:' true
                          )
                           #(#ArrowButtonSpec
                              #'name:' 'ZoomZMinus'
                              #'layout:' #(#LayoutFrame 80 0 105 0 102 0 127 0)
                              #'model:' #'doZoomZ:'
                              #'isTriggerOnDown:' true
                              #'autoRepeat:' true
                              #'actionValue:' '-'
                              #'direction:' #left
                          )
                           #(#LabelSpec
                              #'name:' 'ZoomZLblHolder'
                              #'layout:' #(#LayoutFrame 104 0 105 0 162 0 127 0)
                              #'labelChannel:' #zoomZLabel
                              #'level:' 1
                              #'adjust:' #left
                          )
                           #(#ArrowButtonSpec
                              #'name:' 'ZoomZPlus'
                              #'layout:' #(#LayoutFrame 163 0 105 0 185 0 127 0)
                              #'model:' #'doZoomZ:'
                              #'isTriggerOnDown:' true
                              #'autoRepeat:' true
                              #'actionValue:' '+'
                              #'direction:' #right
                          )
                        )
                    )
                    #'label:' 'Settings'
                    #'labelPosition:' #topLeft
                )
              )
          )
      )
! !

!GraphColumn3DApplication class methodsFor:'menu specs'!

dataSetMenu
    "this window spec was automatically generated by the ST/X MenuEditor"

    "do not manually edit this - the builder may not be able to
     handle the specification if its corrupted."

    "
     MenuEditor new openOnClass:self andSelector:#dataSetMenu
     (Menu new fromLiteralArrayEncoding:(self dataSetMenu)) startUp
    "

    <resource: #menu>

    ^
     
       #(#Menu
          
           #(
             #(#MenuItem
                #'label:' 'Colors'
                #'enabled:' #hasSelection
                #'submenuChannel:' #colorMenu
            )
             #(#MenuItem
                #'label:' 'Show'
                #'enabled:' #hasSelection
                #'submenu:' 
                 #(#Menu
                    
                     #(
                       #(#MenuItem
                          #'label:' 'Show'
                          #'value:' #'doShow:'
                          #'argument:' #on
                      )
                       #(#MenuItem
                          #'label:' 'Hide'
                          #'value:' #'doShow:'
                          #'argument:' #off
                      )
                    ) nil
                    nil
                )
            )
          ) nil
          nil
      )
!

menu
    "this window spec was automatically generated by the ST/X MenuEditor"

    "do not manually edit this - the builder may not be able to
     handle the specification if its corrupted."

    "
     MenuEditor new openOnClass:self andSelector:#menu
     (Menu new fromLiteralArrayEncoding:(self menu)) startUp
    "

    <resource: #menu>

    ^
     
       #(#Menu
          
           #(
             #(#MenuItem
                #'label:' 'File'
                #'submenu:' 
                 #(#Menu
                    
                     #(
                       #(#MenuItem
                          #'label:' 'Exit'
                          #'value:' #closeRequest
                      )
                    ) nil
                    nil
                )
            )
          ) nil
          nil
      )
!

menuToolbar
    "this window spec was automatically generated by the ST/X MenuEditor"

    "do not manually edit this - the builder may not be able to
     handle the specification if its corrupted."

    "
     MenuEditor new openOnClass:self andSelector:#menuToolbar
     (Menu new fromLiteralArrayEncoding:(self menuToolbar)) startUp
    "

    <resource: #menu>

    ^
     
       #(#Menu
          
           #(
             #(#MenuItem
                #'label:' 'Move Tab Up'
                #'isButton:' true
                #'value:' #'doMoveUpOrDown:'
                #'activeHelpKey:' #editMoveUp
                #'argument:' #up
                #'labelImage:' #(#ResourceRetriever #ToolApplicationModel #upIcon)
            )
             #(#MenuItem
                #'label:' 'Move Tab Down'
                #'isButton:' true
                #'value:' #'doMoveUpOrDown:'
                #'activeHelpKey:' #editMoveDown
                #'argument:' #down
                #'labelImage:' #(#ResourceRetriever #ToolApplicationModel #downIcon)
            )
          ) nil
          nil
      )
! !

!GraphColumn3DApplication methodsFor:'aspects'!

listHolder
    "automatically generated by UIPainter ..."

    |list|

    (list := builder bindingAt:#listHolder) isNil ifTrue:[
        builder aspectAt:#listHolder put:(list :=  List new).

        1 to:4 do:[:idx|
            |col x|

            col := GraphColumn name:( 'Sinus: ', idx printString ).
            col functionYblock:[:x0 :yData| x := (x0 - 1) * stepX. self sinX:x into:yData ].
            list add:col
        ].

        1 to:4 do:[:idx|
            |col x|

            col := GraphColumn name:( 'Cosinus: ', idx printString ).
            col foregroundColor:(Color yellow).
            col functionYblock:[:x0 :yData| x := (x0 - 1) * stepX. self cosX:x into:yData ].
            list add:col
        ].
    ].
    ^ list
!

originX
    |holder|

    (holder := builder bindingAt:#originX) isNil ifTrue:[
        builder aspectAt:#originX put:(holder :=  0 asValue).
        holder onChangeSend:#originXChanged to:self
    ].
    ^ holder
!

originXLabel
    |holder|

    (holder := builder bindingAt:#originXLabel) isNil ifTrue:[
        builder aspectAt:#originXLabel put:(holder :=  ValueHolder new).
        holder value:(self originX value printString).
    ].
    ^ holder
!

rotX
    |holder|

    (holder := builder bindingAt:#rotX) isNil ifTrue:[
        builder aspectAt:#rotX put:(holder :=  45 asValue).
    ].
    ^ holder
!

rotY
    |holder|

    (holder := builder bindingAt:#rotY) isNil ifTrue:[
        builder aspectAt:#rotY put:(holder :=  45 asValue).
    ].
    ^ holder
!

rotZ
    |holder|

    (holder := builder bindingAt:#rotZ) isNil ifTrue:[
        builder aspectAt:#rotZ put:(holder :=  0 asValue).
    ].
    ^ holder
!

selectionHolder
    |holder|

    (holder := builder bindingAt:#selectionHolder) isNil ifTrue:[
        builder aspectAt:#selectionHolder put:(holder :=  ValueHolder new).
    ].
    ^ holder
!

windowSize
    |holder|

    (holder := builder bindingAt:#windowSize) isNil ifTrue:[
        builder aspectAt:#windowSize put:(holder :=  100 asValue).
        holder onChangeSend:#windowSizeChanged to:self
    ].
    ^ holder
!

windowSizeLabel
    |holder|

    (holder := builder bindingAt:#windowSizeLabel) isNil ifTrue:[
        builder aspectAt:#windowSizeLabel put:( holder := ValueHolder new ).
        holder value:(self windowSize value printString).
    ].
    ^ holder
!

zoomY
    |holder|

    (holder := builder bindingAt:#zoomY) isNil ifTrue:[
        builder aspectAt:#zoomY put:(holder :=  (1.0 / stepX) asValue).
        holder onChangeSend:#zoomYChanged to:self
    ].
    ^ holder
!

zoomYLabel
    |holder|

    (holder := builder bindingAt:#zoomYLabel) isNil ifTrue:[
        builder aspectAt:#zoomYLabel put:( holder := ValueHolder new ).
        holder value:(self zoomY value printString).
    ].
    ^ holder
!

zoomZ
    |holder|

    (holder := builder bindingAt:#zoomZ) isNil ifTrue:[
        builder aspectAt:#zoomZ put:(holder :=  1.0 asValue).
        holder onChangeSend:#zoomZChanged to:self
    ].
    ^ holder
!

zoomZLabel
    |holder|

    (holder := builder bindingAt:#zoomZLabel) isNil ifTrue:[
        builder aspectAt:#zoomZLabel put:( holder := ValueHolder new ).
        holder value:(self zoomZ value printString).
    ].
    ^ holder
! !

!GraphColumn3DApplication methodsFor:'change & update'!

originXChanged
    "update the label
    "
    self originXLabel value:(self originX value printString).
!

windowSizeChanged
    "update the label
    "
    self windowSizeLabel value:(self windowSize value printString).
!

zoomYChanged
    "update the label
    "
    self zoomYLabel value:(self zoomY value printString).
!

zoomZChanged
    "update the label
    "
    self zoomZLabel value:(self zoomZ value printString).
! !

!GraphColumn3DApplication methodsFor:'functions'!

cosX:x0 into:anArray
    |x|

    x := x0.
    1 to:(anArray size) do:[:i| anArray at:i put:(x cos). x := x + stepX].
  ^ anArray
!

sinX:x0 into:anArray
    |x|

    x := x0.
    1 to:(anArray size) do:[:i| anArray at:i put:(x sin). x := x + stepX ].

  ^ anArray

! !

!GraphColumn3DApplication methodsFor:'initialization'!

initialize
    super initialize.
    stepX := 0.2.
    device supportsGLDrawing ifFalse:[
        Dialog warn:'This Demo will not work correctly, because the graphics device does not support 3D GL drawing'.
    ].
! !

!GraphColumn3DApplication methodsFor:'menu'!

colorMenu
    ^ ColorMenu colorMenu:true value:#doChangeColor:
! !

!GraphColumn3DApplication methodsFor:'queries'!

hasSelection
    ^ self selection size ~~ 0
!

selection
    ^ self selectionHolder value ? #()
! !

!GraphColumn3DApplication methodsFor:'user interactions'!

doChangeColor:aColor
    |list|

    list := self listHolder.
    self selection do:[:i| (list at:i) foregroundColor:aColor ].
!

doChangeWindowSize:how
    |sz|

    sz := self windowSize value.

    how = '+' ifTrue:[
        sz := (sz + 5) min:200.
    ] ifFalse:[
        sz := (sz - 5) max:20.
    ].
    self windowSize value:sz.
!

doMoveUpOrDown:what
    |size index list selection column|

    selection := self selection.
    selection size == 1 ifFalse:[^ self].

    index  := selection at:1.
    list   := self listHolder.
    size   := list size.
    column := list at:index.
    list removeIndex:index.

    what == #up ifTrue:[
        (index := index - 1) == 0 ifTrue:[
            index := size
        ]
    ] ifFalse:[
        (index := index + 1) > size ifTrue:[
            index := 1
        ]
    ].
    list add:column beforeIndex:index.
    self selectionHolder value:index.
!

doScroll:how
    |sz step|

    step := (self windowSize value // 2).

    how = '-' ifTrue:[step := step negated].
    self originX value:(step + self originX value)
!

doShow:what
    |list|

    list := self listHolder.
    self selection do:[:i| (list at:i) shown:(what == #on) ].
!

doZoomY:how
    |sz|

    sz := self zoomY value.

    how = '+' ifTrue:[
        sz := (sz + 0.4) min:20.0.
    ] ifFalse:[
        sz := (sz - 0.4) max:0.2.
    ].
    self zoomY value:sz.
!

doZoomZ:how
    |sz|

    sz := self zoomZ value.

    how = '+' ifTrue:[
        sz := (sz + 0.04) min:2.0.
    ] ifFalse:[
        sz := (sz - 0.04) max:0.02.
    ].
    self zoomZ value:sz.
! !

!GraphColumn3DApplication class methodsFor:'documentation'!

version
    ^ '$Header: /cvs/stx/stx/clients/Demos/GraphColumn3DApplication.st,v 1.3 2015-10-04 10:41:09 cg Exp $'
! !

