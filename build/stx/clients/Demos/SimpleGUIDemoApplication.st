"
 COPYRIGHT (c) 1997 by eXept Software AG
              All Rights Reserved

 This software is furnished under a license and may be used
 only in accordance with the terms of that license and with the
 inclusion of the above copyright notice.   This software may not
 be provided or otherwise made available to, or used by, any
 other person.  No title to or ownership of the software is
 hereby transferred.

 This is a demo example:

 THIS SOFTWARE IS PROVIDED BY THE CONTRIBUTOR ``AS IS'' AND
 ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 ARE DISCLAIMED.  IN NO EVENT SHALL THE CONTRIBUTOR BE LIABLE
 FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 SUCH DAMAGE.
"



"{ NameSpace: CodingExamples_GUI }"

ApplicationModel subclass:#SimpleGUIDemoApplication
	instanceVariableNames:''
	classVariableNames:''
	poolDictionaries:''
	category:'examples-GUIBuilder'
!

!SimpleGUIDemoApplication class methodsFor:'documentation'!

copyright
"
 COPYRIGHT (c) 1997 by eXept Software AG
              All Rights Reserved

 This software is furnished under a license and may be used
 only in accordance with the terms of that license and with the
 inclusion of the above copyright notice.   This software may not
 be provided or otherwise made available to, or used by, any
 other person.  No title to or ownership of the software is
 hereby transferred.

 This is a demo example:

 THIS SOFTWARE IS PROVIDED BY THE CONTRIBUTOR ``AS IS'' AND
 ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 ARE DISCLAIMED.  IN NO EVENT SHALL THE CONTRIBUTOR BE LIABLE
 FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 SUCH DAMAGE.
"


!

documentation
"
    example code from the 'GUI Examples' document.

    [see also:]
        ( Using the GUI Painter : html:tools/uipainter/TOP.html )

    [start with:]
        CodingExamples_GUI::SimpleGUIDemoApplication open
"
! !

!SimpleGUIDemoApplication class methodsFor:'interface specs'!

dialogSpecForRenamingFiles
    "this window spec was automatically generated by the ST/X UIPainter"

    "do not manually edit this - the painter/builder may not be able to
     handle the specification if its corrupted."

    "
     UIPainter new openOnClass:CodingExamples_GUI::SimpleGUIDemoApplication andSelector:#dialogSpecForRenamingFiles
     CodingExamples_GUI::SimpleGUIDemoApplication new openInterface:#dialogSpecForRenamingFiles
    "

    <resource: #canvas>

    ^
     
       #(#FullSpec
          #window: 
           #(#WindowSpec
              #name: 'Rename File'
              #layout: #(#LayoutFrame 201 0 365 0 500 0 480 0)
              #label: 'Rename File'
              #min: #(#Point 10 10)
              #max: #(#Point 1024 768)
              #bounds: #(#Rectangle 201 365 501 481)
              #usePreferredExtent: false
          )
          #component: 
           #(#SpecCollection
              #collection: 
               #(
                 #(#LabelSpec
                    #name: 'RenameLabel'
                    #layout: #(#AlignmentOrigin 78 0 28 0 1 0.5)
                    #label: 'Rename:'
                    #adjust: #right
                )
                 #(#InputFieldSpec
                    #name: 'OldNameInputField'
                    #layout: #(#LayoutFrame 80 0 15 0 -5 1 37 0)
                    #model: #oldFileName
                )
                 #(#LabelSpec
                    #name: 'ToLabel'
                    #layout: #(#AlignmentOrigin 78 0 59 0 1 0.5)
                    #label: 'To:'
                    #adjust: #right
                )
                 #(#InputFieldSpec
                    #name: 'NewNameInputField'
                    #layout: #(#LayoutFrame 80 0 45 0 -5 1 67 0)
                    #model: #newFileName
                )
                 #(#HorizontalPanelViewSpec
                    #name: 'HorizontalPanelView'
                    #layout: #(#LayoutFrame 0 0.0 81 0 0 1.0 0 1.0)
                    #component: 
                     #(#SpecCollection
                        #collection: 
                         #(
                           #(#ActionButtonSpec
                              #name: 'CancelButton'
                              #label: 'Cancel'
                              #model: #cancel
                              #extent: #(#Point 145 29)
                          )
                           #(#ActionButtonSpec
                              #name: 'OKButton'
                              #label: 'OK'
                              #model: #accept
                              #extent: #(#Point 146 29)
                          )
                        )
                    )
                    #horizontalLayout: #fitSpace
                    #verticalLayout: #fitSpace
                    #horizontalSpace: 3
                    #verticalSpace: 3
                )
              )
          )
      )
!

fileListMenu
    "this window spec was automatically generated by the ST/X MenuEditor"

    "do not manually edit this - the builder may not be able to
     handle the specification if its corrupted."

    "
     MenuEditor new openOnClass:CodingExamples_GUI::SimpleGUIDemoApplication andSelector:#fileListMenu
     (Menu new fromLiteralArrayEncoding:(CodingExamples_GUI::SimpleGUIDemoApplication fileListMenu)) startUp
    "

    <resource: #menu>

    ^
     
       #(#Menu
          
           #(
             #(#MenuItem
                #label: 'Rename'
                #value: #renameFile
            )
             #(#MenuItem
                #label: 'Remove'
                #value: #fileRemove
            )
          ) nil
          nil
      )
!

windowSpec
    "this window spec was automatically generated by the ST/X UIPainter"

    "do not manually edit this - the painter/builder may not be able to
     handle the specification if its corrupted."

    "
     UIPainter new openOnClass:CodingExamples_GUI::SimpleGUIDemoApplication andSelector:#windowSpec
     CodingExamples_GUI::SimpleGUIDemoApplication new openInterface:#windowSpec
    "
    "CodingExamples_GUI::SimpleGUIDemoApplication open"

    <resource: #canvas>

    ^
     
       #(#FullSpec
          #window: 
           #(#WindowSpec
              #name: 'Simple File Browser'
              #layout: #(#LayoutFrame 62 0 304 0 388 0 620 0)
              #label: 'Simple File Browser'
              #min: #(#Point 10 10)
              #max: #(#Point 1024 768)
              #bounds: #(#Rectangle 62 304 389 621)
              #usePreferredExtent: false
          )
          #component: 
           #(#SpecCollection
              #collection: 
               #(
                 #(#SequenceViewSpec
                    #name: 'FileListView'
                    #layout: #(#LayoutFrame 0 0.0 0 0.0 0 1.0 0 0.5)
                    #model: #fileListHolder
                    #menu: #fileListMenu
                    #hasHorizontalScrollBar: true
                    #hasVerticalScrollBar: true
                    #valueChangeSelector: #fileNameSelected
                    #useIndex: false
                )
                 #(#TextEditorSpec
                    #name: 'FileContentsView'
                    #layout: #(#LayoutFrame 0 0.0 0 0.5 0 1.0 0 1.0)
                    #model: #fileContentsHolder
                    #hasHorizontalScrollBar: true
                    #hasVerticalScrollBar: true
                )
              )
          )
      )
! !

!SimpleGUIDemoApplication methodsFor:'aspects'!

fileContentsHolder
    "automatically generated by UIPainter ..."

    |holder|

    (holder := builder bindingAt:#fileContentsHolder) isNil ifTrue:[
        builder aspectAt:#fileContentsHolder put:(holder :=  ValueHolder new).
    ].
    ^ holder
!

fileListHolder
    "automatically generated by UIPainter ..."

    |holder|

    (holder := builder bindingAt:#fileListHolder) isNil ifTrue:[
        builder aspectAt:#fileListHolder put:(holder :=  SelectionInList new).
    ].
    ^ holder
! !

!SimpleGUIDemoApplication methodsFor:'private'!

setFileList

    |listOfFiles|

    "get a list of files contained in your current directory"
    listOfFiles := Filename currentDirectory directoryContents sort:[:a :b | a asLowercase < b asLowercase].

    "do not take contained sub directories"
    listOfFiles := listOfFiles reject:[:name | name asFilename isDirectory].

    "put the list into the value holder"
    self fileListHolder list: listOfFiles 

! !

!SimpleGUIDemoApplication methodsFor:'startup'!

postBuildWith:aBuilder
    "invoked after the application has built the window
     with its components. Allows for special postBuild
     actions to be performed by the application"

    super postBuildWith:aBuilder.

    self setFileList
! !

!SimpleGUIDemoApplication methodsFor:'user actions'!

fileNameSelected

    |selectedFileNameString contents|

    "get the selected file name"
    selectedFileNameString := self fileListHolder selection.

    "get the contents of the file having that name"
    contents := selectedFileNameString asFilename contentsOfEntireFile.

    "put the file contents into the text view"
    self fileContentsHolder value: contents
!

fileRemove

    |selectedFileNameString|

    "get the selected file name"
    selectedFileNameString := self fileListHolder selection.

    "open a confirmation dialog"
    (self confirm: ('Remove file: ', selectedFileNameString, '?'))
    ifTrue:
    [
        "remove the file"
        selectedFileNameString asFilename remove.

        "update the fileList"
        self setFileList
    ]
!

renameFile

    |selectedFileNameString oldFileNameHolder newFileNameHolder bindings|

    "get the selection"
    selectedFileNameString := self fileListHolder selection.

    "put the data into value holders"
    oldFileNameHolder      := selectedFileNameString asValue.
    newFileNameHolder      := '' asValue.

    "create the bindings for the builder of the dialog"
    bindings := IdentityDictionary new.
    bindings at: #oldFileName put: oldFileNameHolder.
    bindings at: #newFileName put: newFileNameHolder.

    "open the dialog"
    (self openDialogInterface: #dialogSpecForRenamingFiles withBindings: bindings)
    ifTrue:
    [
        "do the rename"
        selectedFileNameString asFilename renameTo: newFileNameHolder value.

        "update the file list"
        self setFileList
    ]
! !

!SimpleGUIDemoApplication class methodsFor:'documentation'!

version
    ^ '$Header: /cvs/stx/stx/clients/Demos/SimpleGUIDemoApplication.st,v 1.8 1998-03-03 17:35:54 tz Exp $'
! !
