"
 COPYRIGHT (c) 2000 by eXept Software AG 
              All Rights Reserved

 This software is furnished under a license and may be used
 only in accordance with the terms of that license and with the
 inclusion of the above copyright notice.   This software may not
 be provided or otherwise made available to, or used by, any
 other person.  No title to or ownership of the software is
 hereby transferred.


"


"{ NameSpace: CodingExamples_GUI }"

ApplicationModel subclass:#ArbitraryComponentDemo4
	instanceVariableNames:''
	classVariableNames:''
	poolDictionaries:''
	category:'examples-GUIBuilder'
!

!ArbitraryComponentDemo4 class methodsFor:'documentation'!

copyright
"
 COPYRIGHT (c) 2000 by eXept Software AG 
              All Rights Reserved

 This software is furnished under a license and may be used
 only in accordance with the terms of that license and with the
 inclusion of the above copyright notice.   This software may not
 be provided or otherwise made available to, or used by, any
 other person.  No title to or ownership of the software is
 hereby transferred.


"

!

documentation
"
    simple example using an arbitrary component, 
    and plugged aspects.

    I.e. the embedded widget exports some of its aspects
    (see the method #aspectSelectors in DigitalLedDisplay)
    and those are plugged with this applications aspects.
    (see the 'subAspects' tab of the ArbitraryCompnent
     in a GUIPainter on my windowSpec) 

    [author:]
        cg

    [see also:]

    [instance variables:]

    [class variables:]
"

! !

!ArbitraryComponentDemo4 class methodsFor:'interface specs'!

windowSpec
    "This resource specification was automatically generated
     by the UIPainter of ST/X."

    "Do not manually edit this!! If it is corrupted,
     the UIPainter may not be able to read the specification."

    "
     UIPainter new openOnClass:CodingExamples_GUI::ArbitraryComponentDemo4 andSelector:#windowSpec
     CodingExamples_GUI::ArbitraryComponentDemo4 new openInterface:#windowSpec
     CodingExamples_GUI::ArbitraryComponentDemo4 open
    "

    <resource: #canvas>

    ^ 
     #(#FullSpec
        #name: #windowSpec
        #window: 
       #(#WindowSpec
          #label: 'ArbitraryComponentDemo3'
          #name: 'ArbitraryComponentDemo3'
          #min: #(#Point 0 0)
          #max: #(#Point 1024 721)
          #bounds: #(#Rectangle 93 608 482 923)
        )
        #component: 
       #(#SpecCollection
          #collection: #(
           #(#LabelSpec
              #label: 'Embedding a subApp'
              #name: 'Label1'
              #layout: #(#LayoutFrame 0 0.0 9 0 0 1.0 31 0)
              #level: 1
              #translateLabel: true
            )
           #(#SubCanvasSpec
              #name: 'SubCanvas1'
              #layout: #(#LayoutFrame 8 0 74 0 383 0 279 0)
              #majorKey: #'CodingExamples_GUI::ArbitraryComponentDemo4SubApp'
              #subAspectHolders: 
             #(#Array
                
               #(#SubChannelInfoSpec
                  #subAspect: #ledColor
                  #aspect: #theColor
                ) 
               #(#SubChannelInfoSpec
                  #subAspect: #ledValue
                  #aspect: #theValue
                )
              )
              #createNewApplication: true
              #createNewBuilder: true
            )
           #(#InputFieldSpec
              #name: 'EntryField1'
              #layout: #(#LayoutFrame 5 0 37 0 169 0 59 0)
              #model: #theValue
              #type: #number
              #acceptOnPointerLeave: false
            )
           )
         
        )
      )
! !

!ArbitraryComponentDemo4 methodsFor:'aspects'!

theColor
    "automatically generated by UIPainter ..."

    "*** the code below creates a default model when invoked."
    "*** (which may not be the one you wanted)"
    "*** Please change as required and accept it in the browser."

    |holder|

    (holder := builder bindingAt:#theColor) isNil ifTrue:[
        holder := ValueHolder new.
        builder aspectAt:#theColor put:holder.
    ].
    ^ holder.

    "Created: / 11.2.2000 / 00:43:44 / cg"
!

theValue
    "automatically generated by UIPainter ..."

    "*** the code below creates a default model when invoked."
    "*** (which may not be the one you wanted)"
    "*** Please change as required and accept it in the browser."

    |holder|

    (holder := builder bindingAt:#theValue) isNil ifTrue:[
        holder := ValueHolder new.
        builder aspectAt:#theValue put:holder.
    ].
    ^ holder.

    "Created: / 11.2.2000 / 00:53:51 / cg"
! !

!ArbitraryComponentDemo4 class methodsFor:'documentation'!

version
    ^ '$Header: /cvs/stx/stx/clients/Demos/ArbitraryComponentDemo4.st,v 1.1 2000-02-17 14:55:28 cg Exp $'
! !
