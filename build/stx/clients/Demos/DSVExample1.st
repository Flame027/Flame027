'From Smalltalk/X, Version:3.2.1 on 23-oct-1997 at 2:45:49 pm'                  !

"{ NameSpace: CodingExamples_GUI }"

ApplicationModel subclass:#DSVExample1
	instanceVariableNames:'selectedRow pasteBuffer'
	classVariableNames:''
	poolDictionaries:''
	category:'examples-DataSetView'
!

Object subclass:#Row
	instanceVariableNames:'fileName size iconKey group owner permissions baseName'
	classVariableNames:''
	poolDictionaries:''
	privateIn:DSVExample1
!


!DSVExample1 class methodsFor:'interface specs'!

windowSpec
    "this window spec was automatically generated by the ST/X UIPainter"

    "do not manually edit this - the painter/builder may not be able to
     handle the specification if its corrupted."

    "
     UIPainter new openOnClass:DSVExample1 andSelector:#windowSpec
     DSVExample1 new openInterface:#windowSpec
    "
    "DSVExample1 open"

    <resource: #canvas>

    ^
     
       #(#FullSpec
          #'window:' 
           #(#WindowSpec
              #'name:' 'DataSet Example'
              #'layout:' #(#LayoutFrame 219 0 193 0 892 0 551 0)
              #'label:' 'DataSet Example'
              #'min:' #(#Point 10 10)
              #'max:' #(#Point 1152 900)
              #'bounds:' #(#Rectangle 219 193 893 552)
          )
          #'component:' 
           #(#SpecCollection
              #'collection:' 
               #(
                 #(#VariableHorizontalPanelSpec
                    #'name:' 'panel'
                    #'layout:' #(#LayoutFrame 0 0.0 0 0.0 0 1.0 0 1.0)
                    #'component:' 
                     #(#SpecCollection
                        #'collection:' 
                         #(
                           #(#FileSelectionTreeSpec
                              #'name:' 'tree'
                              #'model:' #treeModel
                              #'hasHorizontalScrollBar:' true
                              #'hasVerticalScrollBar:' true
                              #'showDirectoryIndicator:' true
                              #'doubleClickSelector:' #treeDoubleClicked
                              #'hierarchicalList:' #treeRoot
                              #'itemClass:' 'Directory'
                              #'monitoring:' true
                          )
                           #(#DataSetSpec
                              #'name:' 'dataSet'
                              #'model:' #selection
                              #'hasHorizontalScrollBar:' true
                              #'hasVerticalScrollBar:' true
                              #'miniScrollerHorizontal:' true
                              #'rowClassName:' 'DSVExample1::Row'
                              #'dataList:' #list
                              #'level:' 1
                              #'verticalSpacing:' 1
                              #'columns:' 
                               #(
                                 #(#DataSetColumnSpec
                                    #'menu:' #rowMenu
                                    #'rendererType:' #rowSelector
                                )
                                 #(#DataSetColumnSpec
                                    #'label:' ''
                                    #'width:' 30
                                    #'model:' #icon
                                    #'printSelector:' #'iconOn:'
                                    #'canSelect:' false
                                )
                                 #(#DataSetColumnSpec
                                    #'label:' 'file name'
                                    #'minWidth:' 100
                                    #'model:' #baseName
                                )
                                 #(#DataSetColumnSpec
                                    #'label:' 'permissions'
                                    #'width:' 85
                                    #'model:' #permissions
                                    #'canSelect:' false
                                )
                                 #(#DataSetColumnSpec
                                    #'label:' 'owner'
                                    #'width:' 50
                                    #'model:' #owner
                                    #'canSelect:' false
                                )
                                 #(#DataSetColumnSpec
                                    #'label:' 'group'
                                    #'width:' 50
                                    #'model:' #group
                                    #'canSelect:' false
                                )
                                 #(#DataSetColumnSpec
                                    #'label:' 'size'
                                    #'width:' 50
                                    #'model:' #size
                                    #'canSelect:' false
                                )
                              )
                          )
                        )
                    )
                    #'handles:' #(#Any 0.269896 1.0)
                )
              )
          )
      )
! !

!DSVExample1 methodsFor:'actions'!

treeDoubleClicked
    |file list dir lst|

    file := self treeModel value asFilename.

    (file isReadable and:[file isExecutable]) ifTrue:[
        list := self list.
        list removeAll.
        dir := DirectoryContents directoryNamed:file.
        lst := OrderedCollection new.

        dir filesAndBasenamesDo:[:aFile :aName|
            lst add:(Row fileName:aFile baseName:aName)
        ].

        list addAll:lst beforeIndex:1.
    ].
! !

!DSVExample1 methodsFor:'aspects'!

list
    "automatically generated by UIPainter ..."

    |holder fdir coll|

    (holder := builder bindingAt:#list) isNil ifTrue:[
        builder aspectAt:#list put:(holder :=  List new).
    ].
    ^ holder
!

selection
    "automatically generated by UIPainter ..."

    |holder|

    (holder := builder bindingAt:#selection) isNil ifTrue:[
        builder aspectAt:#selection put:(holder :=  ValueHolder new).
    ].
    ^ holder
!

treeModel
    "automatically generated by UIPainter ..."

    |holder|

    (holder := builder bindingAt:#treeModel) isNil ifTrue:[
        builder aspectAt:#treeModel put:(holder :=  ValueHolder new).
    ].
    ^ holder
!

treeRoot
    "automatically generated by UIPainter ..."

    |holder|

    (holder := builder bindingAt:#treeRoot) isNil ifTrue:[
        builder aspectAt:#treeRoot put:(holder :=  ValueHolder new).
        holder value:(OperatingSystem getHomeDirectory).
    ].
    ^ holder

    "Modified: 23.10.1997 / 02:15:27 / cg"
! !

!DSVExample1::Row class methodsFor:'instance creation'!

fileName:aFilename baseName:aBasename
    ^ self new fileName:aFilename baseName:aBasename


! !

!DSVExample1::Row class methodsFor:'menu specs'!

rowMenu
    "this window spec was automatically generated by the ST/X MenuEditor"

    "do not manually edit this - the builder may not be able to
     handle the specification if its corrupted."

    "
     MenuEditor new openOnClass:self andSelector:#rowMenu
     MenuEditor new openOnClass:DSVExample1::Row andSelector:#rowMenu
     (Menu new fromLiteralArrayEncoding:(DSVExample1::Row rowMenu)) startUp
    "

    <resource: #menu>

    ^
     
       #(#Menu
          
           #(
             #(#MenuItem
                #'label:' 'foo'
            )
             #(#MenuItem
                #'label:' 'bar'
            )
             #(#MenuItem
                #'label:' 'baz'
            )
          ) nil
          nil
      )
! !

!DSVExample1::Row methodsFor:'accessing'!

baseName
    "return the value of the instance variable 'baseName' (automatically generated)"

    ^ baseName



!

fileName
    ^ fileName
!

group
    "return the value of the instance variable 'group' (automatically generated)"

    group isNil ifTrue:[
        self validateAttributes
    ].
    ^ group


!

iconOn:aGC
    |icon|

    iconKey isNil ifTrue:[
        self validateAttributes.
    ].
    (icon := aGC registeredImageAt:iconKey) isNil ifTrue:[
        self registerIconsOn:aGC.
        icon := aGC  registeredImageAt:iconKey.
    ].
    ^ icon


!

owner
    "return the value of the instance variable 'owner' (automatically generated)"

    owner isNil ifTrue:[
        self validateAttributes
    ].
    ^ owner


!

permissions
    "return the value of the instance variable 'permissions' (automatically generated)"

    permissions isNil ifTrue:[
        self validateAttributes
    ].
    ^ permissions
!

size
    "return the value of the instance variable 'size' (automatically generated)"

    size isNil ifTrue:[
        self validateAttributes
    ].
    ^ size



! !

!DSVExample1::Row methodsFor:'accessing menus'!

rowMenu
   ^ self class rowMenu
! !

!DSVExample1::Row methodsFor:'instance creation'!

fileName:aFilename baseName:aBasename
    "setup instance for a foleName
    "
    fileName := aFilename.
    baseName := aBasename.


! !

!DSVExample1::Row methodsFor:'private'!

registerIconsOn:aGC
    "register all file icons on the gc
    "
    |directory|

    directory := 'xpmBitmaps/document_images/'.

    #(
        (#file            'tiny_file_plain.xpm'       )
        (#fileLink        'tiny_file_link.xpm'        )
        (#fileLocked      'tiny_file_lock.xpm'        )
        (#imageFile       'tiny_file_pix.xpm'         )

     ) do:[:el|
        aGC registerImage:(Image fromFile:(directory, el last)) key:(el first)
     ].



!

validateAttributes
    |info mode|

    permissions := String new:9 withAll:$-.

    (info := fileName info) isNil ifTrue:[
        iconKey := #fileLocked.
        size    := owner := group := '?'.
      ^ self
    ].
    size   := info size.
    owner  := OperatingSystem  getUserNameFromID:(info uid).
    group  := OperatingSystem getGroupNameFromID:(info gid).
    mode   := info mode.

    1 to:9 by:3 do:[:i|
        (mode bitAt:i    ) == 1 ifTrue:[permissions at:10 - i put:$x].
        (mode bitAt:i + 1) == 1 ifTrue:[permissions at:9  - i put:$w].
        (mode bitAt:i + 2) == 1 ifTrue:[permissions at:8  - i put:$r].
    ].

    fileName isReadable ifTrue:[
        info type == #symbolicLink ifTrue:[
            iconKey == #fileLink
        ] ifFalse:[
            (Image isImageFileSuffix:(fileName suffix)) ifTrue:[
                iconKey := #imageFile
            ] ifFalse:[
                iconKey := #file
            ]
        ]
    ] ifFalse:[
        iconKey := #fileLocked
    ].
! !

!DSVExample1 class methodsFor:'documentation'!

version
    ^ '$Header: /cvs/stx/stx/clients/Demos/DSVExample1.st,v 1.4 1998-09-03 11:51:16 cg Exp $'
! !
