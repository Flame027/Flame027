# $Header: /cvs/stx/stx/libdb/libodbc/Make.proto,v 1.76 2018-01-19 14:19:14 cg Exp $
#
# DO NOT EDIT
# automagically generated from the projectDefinition: stx_libdb_libodbc.
#
# Warning: once you modify this file, do not rerun
# stmkmp or projectDefinition-build again - otherwise, your changes are lost.
#
# The Makefile as generated by this Make.proto supports the following targets:
#    make         - compile all st-files to a classLib
#    make clean   - clean all temp files
#    make clobber - clean all
#
# This file contains definitions for Unix based platforms.
# It shares common definitions with the win32-make in Make.spec.

#
# position (of this package) in directory hierarchy:
# (must point to ST/X top directory, for tools and includes)
TOP=../..
INCLUDE_TOP=$(TOP)/..

# subdirectories where targets are to be made:
SUBDIRS=


# subdirectories where Makefiles are to be made:
# (only define if different from SUBDIRS)
# ALLSUBDIRS=

REQUIRED_SUPPORT_DIRS=

# if your embedded C code requires any system includes,
# add the path(es) here:,
# ********** OPTIONAL: MODIFY the next lines ***
# LOCALINCLUDES=-Ifoo -Ibar
LOCALINCLUDES= -I$(INCLUDE_TOP)/stx/libbasic -I$(INCLUDE_TOP)/stx/libbasic2 -I$(INCLUDE_TOP)/stx/libdb

# comes at the end, so we'll use the system include files if present
CFLAGS_SYSINCLUDES=$(ODBC_FALLBACK_INCLUDES)

# if you need any additional defines for embedded C code,
# add them here:,
# ********** OPTIONAL: MODIFY the next lines ***
# LOCALDEFINES=-Dfoo -Dbar -DDEBUG
LOCALDEFINES=

LIBNAME=libstx_libdb_libodbc
STCLOCALOPT='-package=$(PACKAGE)' -I. $(LOCALINCLUDES) $(STCLOCALOPTIMIZATIONS) $(STCWARNINGS) $(LOCALDEFINES) -headerDir=.  -varPrefix=$(LIBNAME)


# ********** OPTIONAL: MODIFY the next line ***
# additional C-libraries that should be pre-linked with the class-objects
LD_OBJ_LIBS=
LOCAL_SHARED_LIBS=


# ********** OPTIONAL: MODIFY the next line ***
# additional C targets or libraries should be added below
LOCAL_EXTRA_TARGETS=

OBJS= $(COMMON_OBJS) $(UNIX_OBJS)


#
# choose only one driver or driver manager:
# driver managers:
# must be set in architecture specific configuration, not here.
# WHICH_ODBC=   unixodbc
# WHICH_ODBC=   iodbc

# drivers (not really recommended):
# WHICH_ODBC=   myodbc3
# WHICH_ODBC=   myodbc
# WHICH_ODBC=   psqlodbc
# WHICH_ODBC=   libodbctxt
# WHICH_ODBC=   adabas
# WHICH_ODBC=   sybase
# WHICH_ODBC=   osxodbc

#
# defs for using ADABAS
#
ADABAS_HOME=/ADABAS-ENTRY
#ADABAS_HOME=/usr/local/adabas

ADABAS_INCLUDE_DIR=$(ADABAS_HOME)/incl
LIBADABAS_LIBS=-lsqlptc -lsqlrte
LIBADABAS_ODBC=$(ADABAS_HOME)/lib/odbclib.a
ADABAS_PRELINK_STATIC="-L$(ADABAS_HOME)/lib $(LIBADABAS_ODBC) $(LIBADABAS_LIBS)"
ADABAS_DYNAMIC_LIBS=

#
# defs for using SYBASE
#
SYBASE_HOME=/opt/SYBSsa50
SYBASE_INCLUDE_DIR=$(SYBASE_HOME)/include
SYBASE_ODBC=$(SYBASE_HOME)/lib/saodbc.so
SYBASE_LIB=-ldblib
SYBASE_DB_DEFINE=-DSYBASE
SYBASE_PRELINK_STATIC=
SYBASE_DYNAMIC_LIBS="-L$(SYBASE_HOME)/lib $(SYBASE_ODBC) $(SYBASE_LIB)"

#
# defs for using iODBC unix ODBC driver manager
#
IODBC_HOME=/usr/local
IODBC_INCLUDE_DIR=$(IODBC_HOME)/include
IODBC_DB_DEFINE=-DIODBC
IODBC_DYNAMIC_LIBS="-L$(IODBC_HOME)/lib -liodbc -liodbcinst"

#
# defs for using the unixODBC package
#
UNIXODBC_HOME=/usr/local
UNIXODBC_INCLUDE_DIR=$(UNIXODBC_HOME)/include
UNIXODBC_DB_DEFINE=-DUNIXODBC
UNIXODBC_PRELINK_STATIC=
UNIXODBC_DYNAMIC_LIBS="-L$(UNIXODBC_HOME)/lib -lodbc -lodbcinst -lpthread"
# UNIXODBC_EXTRA_TARGETS=libSTXpthread.so

#
# defs for using libodbctxt from unixODBC package
# (for debugging only)
#
LIBODBCTXT_HOME=/usr/local
LIBODBCTXT_INCLUDE_DIR=$(LIBODBCTXT_HOME)/include
LIBODBCTXT_DB_DEFINE=-DLIBODBCTXT
LIBODBCTXT_PRELINK_STATIC=
LIBODBCTXT_DYNAMIC_LIBS="-L$(LIBODBCTXT_HOME)/lib -lodbctxt"

#
# defs for using MYSQL myODBC driver
#
MYODBC_HOME=/usr/local
MYODBC_INCLUDE_DIR=$(MYODBC_HOME)/mysql
MYODBC_DB_DEFINE=-DMYODBC
MYODBC_PRELINK_STATIC=
MYODBC_DYNAMIC_LIBS="-L$(MYODBC_HOME)/lib -lmyodbc"

MYODBC3_PRELINK_STATIC=
MYODBC3_DYNAMIC_LIBS="-L$(MYODBC_HOME)/lib -lmyodbc3"

#
# defs for using PostgresSQL psqlODBC driver
#
PSQLODBC_HOME=/usr/local
PSQLODBC_INCLUDE_DIR=$(PSQLODBC_HOME)/include
PSQLODBC_ODBC=$(PSQLODBC_HOME)/lib/libpsqlodbc.so
PSQLODBC_DB_DEFINE=-DPSQLODBC
PSQLODBC_PRELINK_STATIC=
PSQLODBC_DYNAMIC_LIBS="-L$(PSQLODBC_HOME)/lib -lpsqlodbc"

# defs for using the mac osx ODBC package
#
OSXODBC_HOME=/usr/lib
OSXODBC_INCLUDE_DIR=$(OSXODBC_HOME)/include
OSXODBC_DB_DEFINE=-DOSXODBC
OSXODBC_PRELINK_STATIC=
OSXODBC_DYNAMIC_LIBS="-L$(OSXODBC_HOME) -lodbc -lpthread"
OSXODBC_EXTRA_TARGETS=

#
# future: add defs for other DB´s here ...
#

LOCALDEFS=$(DB_DEFINE) $(DB_INCLUDE) $(DB_LOCAL_INCLUDE_OPT)
LOCAL_SHARED_LIBS=$(DB_DYNAMIC_LIBS)


all:: preMake $(WHICH_ODBC) postMake

pre_objs::  


myodbc:
	@$(MAKE) classLibRule \
		DB_DEFINE=-DMYODBC \
		DB_INCLUDE=-I$(MYODBC_INCLUDE_DIR) \
		DB_LOCAL_INCLUDE_OPT= \
		DB_PRELINK_STATIC=$(MYODBC_PRELINK_STATIC) \
		DB_DYNAMIC_LIBS=$(MYODBC_DYNAMIC_LIBS)

myodbc3:
	@$(MAKE) classLibRule \
		DB_DEFINE=-DMYODBC \
		DB_INCLUDE=-I$(MYODBC_INCLUDE_DIR) \
		DB_LOCAL_INCLUDE_OPT= \
		DB_PRELINK_STATIC=$(MYODBC3_PRELINK_STATIC) \
		DB_DYNAMIC_LIBS=$(MYODBC3_DYNAMIC_LIBS)

psqlodbc:
	@$(MAKE) classLibRule \
		DB_DEFINE=-DPSQLODBC \
		DB_INCLUDE=-I$(PSQLODBC_INCLUDE_DIR) \
		DB_LOCAL_INCLUDE_OPT= \
		DB_PRELINK_STATIC=$(PSQLODBC_PRELINK_STATIC) \
		DB_DYNAMIC_LIBS=$(PSQLODBC_DYNAMIC_LIBS)

iodbc:
	@$(MAKE) classLibRule \
		DB_DEFINE=-DIODBC \
		DB_INCLUDE=-I$(IODBC_INCLUDE_DIR) \
		DB_LOCAL_INCLUDE_OPT= \
		DB_PRELINK_STATIC=$(IODBC_PRELINK_STATIC) \
		DB_DYNAMIC_LIBS=$(IODBC_DYNAMIC_LIBS)

unixodbc:   $(UNIXODBC_EXTRA_TARGETS)
	@$(MAKE) classLibRule \
		DB_DEFINE=-DUNIXODBC \
		DB_INCLUDE=-I$(UNIXODBC_INCLUDE_DIR) \
		DB_LOCAL_INCLUDE_OPT= \
		DB_PRELINK_STATIC=$(UNIXODBC_PRELINK_STATIC) \
		DB_DYNAMIC_LIBS=$(UNIXODBC_DYNAMIC_LIBS)

osxodbc:   $(OSXODBC_EXTRA_TARGETS)
	@$(MAKE) classLibRule \
		DB_DEFINE=-DOSXODBC \
		DB_INCLUDE=-I$(OSXODBC_INCLUDE_DIR) \
		DB_LOCAL_INCLUDE_OPT= \
		DB_PRELINK_STATIC=$(OSXODBC_PRELINK_STATIC) \
		DB_DYNAMIC_LIBS=$(OSXODBC_DYNAMIC_LIBS)

libodbctxt:
	@$(MAKE) classLibRule \
		DB_DEFINE=-DLIBODBCTXT \
		DB_INCLUDE=-I$(LIBODBCTXT_INCLUDE_DIR) \
		DB_LOCAL_INCLUDE_OPT= \
		DB_PRELINK_STATIC=$(LIBODBCTXT_PRELINK_STATIC) \
		DB_DYNAMIC_LIBS=$(LIBODBCTXT_DYNAMIC_LIBS)

adabas:
	@$(MAKE) classLibRule \
		DB_DEFINE=-DADABAS \
		DB_INCLUDE=-I$(ADABAS_INCLUDE_DIR) \
		DB_LOCAL_INCLUDE_OPT=-I./adabas \
		DB_PRELINK_STATIC=$(ADABAS_PRELINK_STATIC) \
		DB_DYNAMIC_LIBS=$(ADABAS_DYNAMIC_LIBS)

sybase:
	@$(MAKE) classLibRule \
		DB_DEFINE=-DSYBASE \
		DB_INCLUDE=-I$(SYBASE_INCLUDE_DIR) \
		DB_LOCAL_INCLUDE_OPT= \
		DB_PRELINK_STATIC=$(SYBASE_PRELINK_STATIC) \
		DB_DYNAMIC_LIBS=$(SYBASE_DYNAMIC_LIBS)








# run default testsuite for this package
test: $(TOP)/goodies/builder/reports
	$(MAKE) -C $(TOP)/goodies/builder/reports -f Makefile.init
	$(TOP)/goodies/builder/reports/report-runner.sh -D . -r Builder::TestReport -p $(PACKAGE)



# add more install actions here
install::

# add more install actions for aux-files (resources) here
installAux::

# add more preMake actions here
preMake::

# add more postMake actions here
postMake:: cleanjunk

# build all mandatory prerequisite packages (containing superclasses) for this package
prereq:
	cd ../../libbasic && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES)"
	cd ../../libbasic2 && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES)"
	cd ../ && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES)"



# build all packages containing referenced classes for this package
# they are not needed to compile the package (but later, to load it)
references:


cleanjunk::
	-rm -f *.s *.s2

clean::
	-rm -f *.o *.H

clobber:: clean
	-rm -f *.so *.dll


# BEGINMAKEDEPEND --- do not remove this line; make depend needs it
$(OUTDIR)SQL__ODBCColumnDescription.$(O) SQL__ODBCColumnDescription.$(H): SQL__ODBCColumnDescription.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__DatabaseColumnDescription.$(H) $(STCHDR)
$(OUTDIR)SQL__ODBCCursor.$(O) SQL__ODBCCursor.$(H): SQL__ODBCCursor.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__Cursor.$(H) $(STCHDR)
$(OUTDIR)SQL__ODBCEnvironment.$(O) SQL__ODBCEnvironment.$(H): SQL__ODBCEnvironment.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__Database.$(H) $(STCHDR)
$(OUTDIR)SQL__ODBCError.$(O) SQL__ODBCError.$(H): SQL__ODBCError.st $(INCLUDE_TOP)/stx/libbasic/Error.$(H) $(INCLUDE_TOP)/stx/libbasic/Exception.$(H) $(INCLUDE_TOP)/stx/libbasic/GenericException.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/ProceedableError.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__SQLError.$(H) $(STCHDR)
$(OUTDIR)SQL__ODBCHandle.$(O) SQL__ODBCHandle.$(H): SQL__ODBCHandle.st $(INCLUDE_TOP)/stx/libbasic/ExternalAddress.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__DatabaseHandle.$(H) $(STCHDR)
$(OUTDIR)SQL__ODBCKeyDescription.$(O) SQL__ODBCKeyDescription.$(H): SQL__ODBCKeyDescription.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__DatabaseKeyDescription.$(H) $(STCHDR)
$(OUTDIR)SQL__ODBCSession.$(O) SQL__ODBCSession.$(H): SQL__ODBCSession.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__Connection.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__DatabaseSession.$(H) $(STCHDR)
$(OUTDIR)SQL__ODBCStatement.$(O) SQL__ODBCStatement.$(H): SQL__ODBCStatement.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__Statement.$(H) $(STCHDR)
$(OUTDIR)SQL__ODBCTableDescription.$(O) SQL__ODBCTableDescription.$(H): SQL__ODBCTableDescription.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__DatabaseTableDescription.$(H) $(STCHDR)
$(OUTDIR)stx_libdb_libodbc.$(O) stx_libdb_libodbc.$(H): stx_libdb_libodbc.st $(INCLUDE_TOP)/stx/libbasic/LibraryDefinition.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/ProjectDefinition.$(H) $(STCHDR)
$(OUTDIR)SQL__ODBCConnectionError.$(O) SQL__ODBCConnectionError.$(H): SQL__ODBCConnectionError.st $(INCLUDE_TOP)/stx/libbasic/Error.$(H) $(INCLUDE_TOP)/stx/libbasic/Exception.$(H) $(INCLUDE_TOP)/stx/libbasic/GenericException.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/ProceedableError.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__SQLError.$(H) $(INCLUDE_TOP)/stx/libdb/libodbc/SQL__ODBCError.$(H) $(STCHDR)
$(OUTDIR)SQL__ODBCSchemaColumnDescription.$(O) SQL__ODBCSchemaColumnDescription.$(H): SQL__ODBCSchemaColumnDescription.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libdb/SQL__DatabaseColumnDescription.$(H) $(INCLUDE_TOP)/stx/libdb/libodbc/SQL__ODBCColumnDescription.$(H) $(STCHDR)
$(OUTDIR)extensions.$(O): extensions.st $(INCLUDE_TOP)/stx/libbasic/AbstractTime.$(H) $(INCLUDE_TOP)/stx/libbasic/ArithmeticValue.$(H) $(INCLUDE_TOP)/stx/libbasic/ArrayedCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/Boolean.$(H) $(INCLUDE_TOP)/stx/libbasic/ByteArray.$(H) $(INCLUDE_TOP)/stx/libbasic/CharacterArray.$(H) $(INCLUDE_TOP)/stx/libbasic/Collection.$(H) $(INCLUDE_TOP)/stx/libbasic/Date.$(H) $(INCLUDE_TOP)/stx/libbasic/FixedPoint.$(H) $(INCLUDE_TOP)/stx/libbasic/Float.$(H) $(INCLUDE_TOP)/stx/libbasic/Fraction.$(H) $(INCLUDE_TOP)/stx/libbasic/Integer.$(H) $(INCLUDE_TOP)/stx/libbasic/LimitedPrecisionReal.$(H) $(INCLUDE_TOP)/stx/libbasic/Magnitude.$(H) $(INCLUDE_TOP)/stx/libbasic/Number.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/SequenceableCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/ShortFloat.$(H) $(INCLUDE_TOP)/stx/libbasic/Time.$(H) $(INCLUDE_TOP)/stx/libbasic/Timestamp.$(H) $(INCLUDE_TOP)/stx/libbasic/TwoByteString.$(H) $(INCLUDE_TOP)/stx/libbasic/Unicode16String.$(H) $(INCLUDE_TOP)/stx/libbasic/UninterpretedBytes.$(H) $(INCLUDE_TOP)/stx/libbasic2/UUID.$(H) $(STCHDR)

# ENDMAKEDEPEND --- do not remove this line

