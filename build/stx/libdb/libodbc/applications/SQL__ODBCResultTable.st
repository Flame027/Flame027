"
 COPYRIGHT (c) 2005 by eXept Software AG
              All Rights Reserved

 This software is furnished under a license and may be used
 only in accordance with the terms of that license and with the
 inclusion of the above copyright notice.   This software may not
 be provided or otherwise made available to, or used by, any
 other person.  No title to or ownership of the software is
 hereby transferred.
"
"{ Package: 'stx:libdb/libodbc/applications' }"

"{ NameSpace: SQL }"

AdaptableApplicationModel subclass:#ODBCResultTable
	instanceVariableNames:'applicationHolder'
	classVariableNames:''
	poolDictionaries:''
	category:'DataBase-ODBC-Application'
!

ApplicationModel subclass:#DataSetView
	instanceVariableNames:'parent dataSetView viewHolder'
	classVariableNames:''
	poolDictionaries:''
	privateIn:ODBCResultTable
!

ApplicationModel subclass:#HTMLTable
	instanceVariableNames:'parent shownView'
	classVariableNames:''
	poolDictionaries:''
	privateIn:ODBCResultTable
!

!ODBCResultTable class methodsFor:'documentation'!

copyright
"
 COPYRIGHT (c) 2005 by eXept Software AG
              All Rights Reserved

 This software is furnished under a license and may be used
 only in accordance with the terms of that license and with the
 inclusion of the above copyright notice.   This software may not
 be provided or otherwise made available to, or used by, any
 other person.  No title to or ownership of the software is
 hereby transferred.
"
! !

!ODBCResultTable class methodsFor:'class access'!

dataSetViewClass
    ^ DataSetView

    "Created: / 06-07-2006 / 18:32:47 / cg"
! !

!ODBCResultTable class methodsFor:'interface specs'!

windowSpec
    "This resource specification was automatically generated
     by the UIPainter of ST/X."

    "Do not manually edit this!! If it is corrupted,
     the UIPainter may not be able to read the specification."

    "
     UIPainter new openOnClass:SQL::ODBCResultTable andSelector:#windowSpec
     SQL::ODBCResultTable new openInterface:#windowSpec
     SQL::ODBCResultTable open
    "

    <resource: #canvas>

    ^ 
    #(FullSpec
       name: windowSpec
       window: 
      (WindowSpec
         label: 'SQL::ODBCResultTable'
         name: 'SQL::ODBCResultTable'
         min: (Point 10 10)
         max: (Point 1024 768)
         bounds: (Rectangle 0 0 300 300)
         menu: menu
       )
       component: 
      (SpecCollection
         collection: (
          (SubCanvasSpec
             name: 'SubCanvas1'
             layout: (LayoutFrame 0 0 0 0 0 1 0 1)
             hasHorizontalScrollBar: true
             hasVerticalScrollBar: false
             clientHolder: applicationHolder
             createNewBuilder: false
           )
          )
        
       )
     )
! !

!ODBCResultTable class methodsFor:'menu specs'!

menu
    "This resource specification was automatically generated
     by the MenuEditor of ST/X."

    "Do not manually edit this!! If it is corrupted,
     the MenuEditor may not be able to read the specification."

    "
     MenuEditor new openOnClass:SQL::ODBCResultTable andSelector:#menu
     (Menu new fromLiteralArrayEncoding:(SQL::ODBCResultTable menu)) startUp
    "

    <resource: #menu>

    ^ 
     #(Menu
        (
         (MenuItem
            label: 'ResultType'
            translateLabel: true
            submenu: 
           (Menu
              (
               (MenuItem
                  label: 'Table output'
                  itemValue: changeResultApp:
                  translateLabel: true
                  choice: outputApp
                  choiceValue: true
                )
               (MenuItem
                  label: 'HTML output'
                  itemValue: changeResultApp:
                  translateLabel: true
                  choice: outputApp
                )
               )
              nil
              nil
            )
          )
         )
        nil
        nil
      )
! !

!ODBCResultTable methodsFor:'aspects'!

applicationHolder
    applicationHolder isNil ifTrue:[
        applicationHolder := ValueHolder with:(DataSetView new).

    ].
    ^ applicationHolder.
! !

!ODBCResultTable methodsFor:'callBacks'!

activeCursor:activeCursor
    applicationHolder value activeCursor:activeCursor
! !

!ODBCResultTable methodsFor:'initialization & release'!

closeDownViews
    "This is a hook method generated by the Browser.
     It will be invoked when your app/dialog-window is really closed.
     See also #closeDownViews, which is invoked before and may suppress the close
     or ask the user for confirmation."

    "/ change the code below as required ...
    "/ This should cleanup any leftover resources
    "/ (for example, temporary files)
    "/ super closeRequest will initiate the closeDown

    "/ add your code here

    "/ do not remove the one below ...
    ^ super closeDownViews
!

closeRequest
    "This is a hook method generated by the Browser.
     It will be invoked when your app/dialog-window is about to be
     closed (this method has a chance to suppress the close).
     See also #closeDownViews, which is invoked when the close is really done."

    "/ change the code below as required ...
    "/ Closing can be suppressed, by simply returning.
    "/ The 'super closeRequest' at the end will initiate the real closeDown

    ("self hasUnsavedChanges" true) ifTrue:[
        (self confirm:(resources string:'Close without saving ?')) ifFalse:[
            ^ self
        ]
    ].

    ^ super closeRequest
!

postBuildWith:aBuilder
    "This is a hook method generated by the Browser.
     It will be invoked during the initialization of your app/dialog,
     after all of the visual components have been built, 
     but BEFORE the top window is made visible.
     Add any app-specific actions here (reading files, setting up values etc.)
     See also #postOpenWith:, which is invoked after opening."

    "/ add any code here ...

    ^ super postBuildWith:aBuilder
!

postOpenWith:aBuilder
    "This is a hook method generated by the Browser.
     It will be invoked right after the applications window has been opened.
     Add any app-specific actions here (starting background processes etc.).
     See also #postBuildWith:, which is invoked before opening."

    "/ add any code here ...

    ^ super postOpenWith:aBuilder
! !

!ODBCResultTable::DataSetView class methodsFor:'interface spec'!

windowSpec
    "This resource specification was automatically generated
     by the UIPainter of ST/X."

    "Do not manually edit this!! If it is corrupted,
     the UIPainter may not be able to read the specification."

    "
     UIPainter new openOnClass:SQL::ODBCResultTable::DataSetView andSelector:#windowSpec
     SQL::ODBCResultTable::DataSetView new openInterface:#windowSpec
     SQL::ODBCResultTable::DataSetView open
    "

    <resource: #canvas>

    ^ 
     #(FullSpec
        name: windowSpec
        window: 
       (WindowSpec
          label: 'SQL::ODBCResultTable'
          name: 'SQL::ODBCResultTable'
          min: (Point 10 10)
          max: (Point 1024 768)
          bounds: (Rectangle 0 0 300 300)
          menu: mainMenu
        )
        component: 
       (SpecCollection
          collection: (
           (ArbitraryComponentSpec
              name: 'ArbitraryComponent1'
              layout: (LayoutFrame 0 0 0 0 0 1 0 1)
              hasBorder: false
              viewChannel: viewHolder
            )
           )
         
        )
      )
! !

!ODBCResultTable::DataSetView methodsFor:'aspects'!

viewHolder
    "automatically generated by UIPainter ..."

    "*** the code below creates a default model when invoked."
    "*** (which may not be the one you wanted)"
    "*** Please change as required and accept it in the browser."
    "*** (and replace this comment by something more useful ;-)"

    viewHolder isNil ifTrue:[
        viewHolder := ValueHolder new.
"/ if your app needs to be notified of changes, uncomment one of the lines below:
"/       viewHolder addDependent:self.
"/       viewHolder onChangeSend:#viewHolderChanged to:self.
    ].
    ^ viewHolder.
! !

!ODBCResultTable::DataSetView methodsFor:'call backs'!

activeCursor:activeCursor
    |columnDescriptions columns rows rdWtSel dsv idx|

    columns := OrderedCollection new.
    rdWtSel := #( #at: #at:put: ).

    columnDescriptions := activeCursor columnDescriptions.
    columnDescriptions do:[:desc |
        |col|

        columns add:(col := DataSetColumnSpec label:desc name editorType:#None selector:rdWtSel ).
        col minWidth:50.
    ].

    rows := OrderedCollection new.
    dsv := Smalltalk::DataSetView new.

    idx := 1.
    [activeCursor next notNil "and:[idx < 100]"] whileTrue:[
        rows add:activeCursor rowAsArray.
        idx := idx + 1.
    ].

    dsv columnDescriptors: columns.
    dsv list: rows.
    self viewHolder value: dsv.
    Transcript showCR:('%1 rows' bindWith:idx-1).

    "Modified: / 02-12-2013 / 00:51:53 / cg"
! !

!ODBCResultTable::HTMLTable class methodsFor:'windows'!

windowSpec
    "This resource specification was automatically generated
     by the UIPainter of ST/X."

    "Do not manually edit this!! If it is corrupted,
     the UIPainter may not be able to read the specification."

    "
     UIPainter new openOnClass:SQL::ODBCResultTable andSelector:#windowSpec
     SQL::ODBCResultTable new openInterface:#windowSpec
     SQL::ODBCResultTable open
    "

    <resource: #canvas>

    ^ 
     #(FullSpec
        name: windowSpec
        window: 
       (WindowSpec
          label: 'SQL::ODBCResultTable'
          name: 'SQL::ODBCResultTable'
          min: (Point 10 10)
          max: (Point 1024 768)
          bounds: (Rectangle 0 0 300 300)
          menu: mainMenu
        )
        component: 
       (SpecCollection
          collection: (
           (ArbitraryComponentSpec
              name: 'ArbitraryComponent1'
              layout: (LayoutFrame 0 0 0 0 0 1 0 1)
              hasBorder: false
              viewChannel: shownView
            )
           )

        )
      )
! !

!ODBCResultTable::HTMLTable methodsFor:'aspects'!

shownView

    shownView isNil ifTrue:[
        shownView := ValueHolder with:(Workspace new).
    ].
    ^ shownView.
! !

!ODBCResultTable::HTMLTable methodsFor:'callBacks'!

activeCursor:activeCursor
    |transcript|
    transcript := self shownView value.
    transcript clear.

    transcript nextPutAll: '<table border=1>'.
    transcript cr.
    transcript nextPutAll: '<caption>', 'Statement result','</caption>'.
    transcript cr.
    transcript nextPutAll:'<tr>'.
    transcript cr.
    (1 to:activeCursor numberOfColumns) do:[:idx |
        |desc|
        desc := activeCursor fetchColumnDescription:idx.
        transcript nextPutAll:'<th>'.
        transcript nextPutAll:desc name, '(', desc sqlType printString,')'.
        transcript nextPutAll:'</th>'.
    ]inBetweenDo:[    
        transcript cr.
    ].
    transcript cr.
    transcript nextPutAll:'</tr>'.

    transcript cr.
    [activeCursor next notNil] whileTrue:[
        transcript nextPutAll:'<tr>'.
        transcript cr.
        activeCursor rowAsArray do:[:aColumn |
            transcript nextPutAll:'  <td>'.
            transcript nextPutAll:aColumn printString.
            transcript nextPutAll:'</td>'.

        ] inBetweenDo:[transcript spaces:2].
        transcript cr.
        transcript nextPutAll:'</tr>'.
        transcript cr.
    ].

    transcript nextPutAll: '</table>'

    "Modified (format): / 02-12-2013 / 00:03:46 / cg"
! !

!ODBCResultTable class methodsFor:'documentation'!

version
    ^ '$Header: /cvs/stx/stx/libdb/libodbc/applications/SQL__ODBCResultTable.st,v 1.9 2013-12-02 11:34:19 cg Exp $'
!

version_CVS
    ^ '$Header: /cvs/stx/stx/libdb/libodbc/applications/SQL__ODBCResultTable.st,v 1.9 2013-12-02 11:34:19 cg Exp $'
! !

