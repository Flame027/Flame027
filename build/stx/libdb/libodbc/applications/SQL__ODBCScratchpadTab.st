"
 COPYRIGHT (c) 2005 by eXept Software AG
              All Rights Reserved

 This software is furnished under a license and may be used
 only in accordance with the terms of that license and with the
 inclusion of the above copyright notice.   This software may not
 be provided or otherwise made available to, or used by, any
 other person.  No title to or ownership of the software is
 hereby transferred.
"

"{ Package: 'stx:libdb/libodbc/applications' }"

"{ NameSpace: SQL }"

AdaptableApplicationModel subclass:#ODBCScratchpadTab
	instanceVariableNames:'canvasHolder tabListHolder selectedTabHolder tabApplications
		class'
	classVariableNames:''
	poolDictionaries:''
	category:'DataBase-ODBC-Application'
!

!ODBCScratchpadTab class methodsFor:'documentation'!

copyright
"
 COPYRIGHT (c) 2005 by eXept Software AG
              All Rights Reserved

 This software is furnished under a license and may be used
 only in accordance with the terms of that license and with the
 inclusion of the above copyright notice.   This software may not
 be provided or otherwise made available to, or used by, any
 other person.  No title to or ownership of the software is
 hereby transferred.
"
!

documentation
"
    documentation to be added.

    [author:]
        james (james@CHANTI)

    [instance variables:]

    [class variables:]

    [see also:]

"
! !

!ODBCScratchpadTab class methodsFor:'interface specs'!

windowSpec
    "This resource specification was automatically generated
     by the UIPainter of ST/X."

    "Do not manually edit this!! If it is corrupted,
     the UIPainter may not be able to read the specification."

    "
     UIPainter new openOnClass:SQL::ODBCScratchpadTab andSelector:#windowSpec
     SQL::ODBCScratchpadTab new openInterface:#windowSpec
     SQL::ODBCScratchpadTab open
    "

    <resource: #canvas>

    ^ 
     #(FullSpec
        name: windowSpec
        window: 
       (WindowSpec
          label: 'ODBC Scratchpad'
          name: 'ODBC Scratchpad'
          min: (Point 10 10)
          max: (Point 1024 768)
          bounds: (Rectangle 0 0 300 300)
          menu: mainMenu
        )
        component: 
       (SpecCollection
          collection: (
           (NoteBookViewSpec
              name: 'NoteBook1'
              layout: (LayoutFrame 0 0 0 0 0 1 0 1)
              model: selectedTabHolder
              menu: tabListHolder
              fitLastRow: false
              accessTabMenuAction: selectionChanged:
              tabLeftMargin: 20
              tabRightMargin: 20
              canvas: canvasHolder
              keepCanvasAlive: true
              postBuildCallback: selectInitialTab
            )
           (ActionButtonSpec
              label: '+'
              name: 'New tab'
              layout: (LayoutFrame 0 0 0 0 20 0 20 0)
              translateLabel: true
              model: doAddTab
            )
           (ActionButtonSpec
              label: '-'
              name: 'remove tab'
              layout: (LayoutFrame -20 1 0 0 0 1 20 0)
              translateLabel: true
              model: doRemoveTab
            )
           )
         
        )
      )
! !

!ODBCScratchpadTab class methodsFor:'menu specs'!

mainMenu
    "This resource specification was automatically generated by the CodeGeneratorTool."

    "Do not manually edit this!! If it is corrupted,
     the MenuEditor may not be able to read the specification."

    "
     MenuEditor new openOnClass:SQL::TabbedApplication andSelector:#mainMenu
    "

    <resource: #menu>

    ^ #(#Menu
           #(
             #(#MenuItem
                #label: 'File'
                #translateLabel: true
                #submenu: 
                 #(#Menu
                     #(
                       #(#MenuItem
                          #label: 'New'
                          #translateLabel: true
                          #value: #menuNew
                      )
                       #(#MenuItem
                          #label: '-'
                      )
                       #(#MenuItem
                          #label: 'Open...'
                          #translateLabel: true
                          #value: #menuOpen
                      )
                       #(#MenuItem
                          #label: '-'
                      )
                       #(#MenuItem
                          #label: 'Save'
                          #translateLabel: true
                          #value: #menuSave
                      )
                       #(#MenuItem
                          #label: 'Save As...'
                          #translateLabel: true
                          #value: #menuSaveAs
                      )
                       #(#MenuItem
                          #label: '-'
                      )
                       #(#MenuItem
                          #label: 'Exit'
                          #translateLabel: true
                          #value: #closeRequest
                      )
                    ) nil
                    nil
                )
            )
             #(#MenuItem
                #label: 'Help'
                #translateLabel: true
                #startGroup: #right
                #submenu: 
                 #(#Menu
                     #(
                       #(#MenuItem
                          #label: 'Documentation'
                          #translateLabel: true
                          #value: #openDocumentation
                      )
                       #(#MenuItem
                          #label: '-'
                      )
                       #(#MenuItem
                          #label: 'About this Application'
                          #translateLabel: true
                          #value: #openAboutThisApplication
                      )
                    ) nil
                    nil
                )
            )
          ) nil
          nil
      )
! !

!ODBCScratchpadTab methodsFor:'accessing'!

class
    ^ class
!

class:something
    class := something.
!

currentlyActiveScratchPad:aScratchPad
    ^ self functionalityPoolAt:#currentlyActiveScratchPad put:aScratchPad
! !

!ODBCScratchpadTab methodsFor:'defaults'!

tabClass
    ^ class ? SQL::ODBCScratchpad
! !

!ODBCScratchpadTab methodsFor:'factory'!

canvasHolder
    "automatically generated by UIPainter ..."

    "*** the code below creates a default model when invoked."
    "*** (which may not be the one you wanted)"
    "*** Please change as required and accept it in the browser."
    "*** (and replace this comment by something more useful ;-)"

    canvasHolder isNil ifTrue:[
        canvasHolder := ValueHolder with:(SubCanvas new) .
"/ if your app needs to be notified of changes, uncomment one of the lines below:
"/       canvasHolder addDependent:self.
"/       canvasHolder onChangeSend:#canvasHolderChanged to:self.
    ].
    ^ canvasHolder.
!

doAddTab
    |newApp newTabName|

    newTabName := 'NewTab', tabApplications size printString.
    newApp := self instanceAtTab:newTabName.
    self selectedTab:newTabName.
!

doRemoveTab
    self halt:'please define doRemoveTab here'.
!

instanceAtTab:aSymbol 
    | anInstance aBuilder canvas|

    ^ self tabApplications at:aSymbol ifAbsentPut:[
        self tabListHolder value: (self tabListHolder value copy add:aSymbol; yourself).
        anInstance := self tabClass new.

        anInstance masterApplication:self.
        aBuilder := UIBuilder new.
        aBuilder application:anInstance.
        anInstance builder:aBuilder.
        canvas := ApplicationSubView new.
        canvas client:anInstance spec:#windowSpec builder:aBuilder.
        anInstance postOpenWith:aBuilder.
        anInstance
    ].
!

selectInitialTab
"/    self selectedTab:self tabListHolder value first.
    self doAddTab
!

selectedTab
    ^ tabApplications at:selectedTabHolder value
!

selectedTab:aSymbol 
    ^ self selectedTabHolder value:aSymbol
!

selectedTabHolder

    selectedTabHolder isNil ifTrue:[
        selectedTabHolder := ValueHolder new.
       selectedTabHolder addDependent:self.
       selectedTabHolder onChangeSend:#selectedTabHolderChanged to:self.
    ].
    ^ selectedTabHolder.
!

selectedTabHolderChanged
    | instance |            
    instance := self selectedTab.
    instance ifNil:[
        ^ self
    ].

    self currentlyActiveScratchPad:instance.
    self canvasHolder value: (instance window).
!

tabApplications
    "return the value of the instance variable 'tabApplications' (automatically generated)"
    tabApplications ifNil:[
        tabApplications := Dictionary new
    ].
    ^ tabApplications
!

tabApplications:something
    "set the value of the instance variable 'tabApplications' (automatically generated)"

    tabApplications := something.
!

tabListHolder
    "holds the names of the tab in a tabList"
    tabListHolder isNil ifTrue:[
        tabListHolder := ValueHolder with:(OrderedCollection new).
"/ if your app needs to be notified of changes, uncomment one of the lines below:
"/       tabList addDependent:self.
"/       tabList onChangeSend:#tabListChanged to:self.
    ].
    ^ tabListHolder.
! !

!ODBCScratchpadTab class methodsFor:'documentation'!

version
    ^ '$Header: /cvs/stx/stx/libdb/libodbc/applications/SQL__ODBCScratchpadTab.st,v 1.10 2006-07-07 11:47:03 cg Exp $'
! !
