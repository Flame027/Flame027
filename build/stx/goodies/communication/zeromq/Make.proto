# $Header: /cvs/stx/stx/goodies/communication/zeromq/Make.proto,v 1.4 2018-05-11 00:03:23 cg Exp $
#
# DO NOT EDIT
# automagically generated from the projectDefinition: stx_goodies_communication_zeromq.
#
# Warning: once you modify this file, do not rerun
# stmkmp or projectDefinition-build again - otherwise, your changes are lost.
#
# The Makefile as generated by this Make.proto supports the following targets:
#    make         - compile all st-files to a classLib
#    make clean   - clean all temp files
#    make clobber - clean all
#
# This file contains definitions for Unix based platforms.
# It shares common definitions with the win32-make in Make.spec.

#
# position (of this package) in directory hierarchy:
# (must point to ST/X top directory, for tools and includes)
TOP=../../..
INCLUDE_TOP=$(TOP)/..

# subdirectories where targets are to be made:
SUBDIRS=


# subdirectories where Makefiles are to be made:
# (only define if different from SUBDIRS)
# ALLSUBDIRS=

REQUIRED_SUPPORT_DIRS=

# if your embedded C code requires any system includes,
# add the path(es) here:,
# ********** OPTIONAL: MODIFY the next lines ***
# LOCALINCLUDES=-Ifoo -Ibar
LOCALINCLUDES= -I$(INCLUDE_TOP)/stx/libbasic -I$(INCLUDE_TOP)/stx/libbasic2


# if you need any additional defines for embedded C code,
# add them here:,
# ********** OPTIONAL: MODIFY the next lines ***
# LOCALDEFINES=-Dfoo -Dbar -DDEBUG
LOCALDEFINES=

LIBNAME=libstx_goodies_communication_zeromq
STCLOCALOPT='-package=$(PACKAGE)' -I. $(LOCALINCLUDES) $(STCLOCALOPTIMIZATIONS) $(STCWARNINGS) $(LOCALDEFINES) -headerDir=.  -varPrefix=$(LIBNAME)


# ********** OPTIONAL: MODIFY the next line ***
# additional C-libraries that should be pre-linked with the class-objects
LD_OBJ_LIBS=
LOCAL_SHARED_LIBS=


# ********** OPTIONAL: MODIFY the next line ***
# additional C targets or libraries should be added below
LOCAL_EXTRA_TARGETS=

OBJS= $(COMMON_OBJS) $(UNIX_OBJS)



all:: preMake classLibRule postMake

pre_objs::  









# run default testsuite for this package
test: $(TOP)/goodies/builder/reports
	$(MAKE) -C $(TOP)/goodies/builder/reports -f Makefile.init
	$(TOP)/goodies/builder/reports/report-runner.sh -D . -r Builder::TestReport -p $(PACKAGE)



# add more install actions here
install::

# add more install actions for aux-files (resources) here
installAux::

# add more preMake actions here
preMake::

# add more postMake actions here
postMake:: cleanjunk

# build all mandatory prerequisite packages (containing superclasses) for this package
prereq:
	cd ../../../libbasic && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "



# build all packages containing referenced classes for this package
# they are not needed to compile the package (but later, to load it)
references:


cleanjunk::
	-rm -f *.s *.s2

clean::
	-rm -f *.o *.H

clobber:: clean
	-rm -f *.so *.dll


# BEGINMAKEDEPEND --- do not remove this line; make depend needs it
$(OUTDIR)ZmqApi.$(O) ZmqApi.$(C) ZmqApi.$(H): ZmqApi.st $(INCLUDE_TOP)/stx/libbasic/ExternalLibrary.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqApiConstants.$(O) ZmqApiConstants.$(C) ZmqApiConstants.$(H): ZmqApiConstants.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqApiContext.$(O) ZmqApiContext.$(C) ZmqApiContext.$(H): ZmqApiContext.st $(INCLUDE_TOP)/stx/libbasic/ArrayedCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/Collection.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalBytes.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalStructure.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/SequenceableCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/UninterpretedBytes.$(H) $(STCHDR)
$(OUTDIR)ZmqApiMessage.$(O) ZmqApiMessage.$(C) ZmqApiMessage.$(H): ZmqApiMessage.st $(INCLUDE_TOP)/stx/libbasic/ArrayedCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/Collection.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalBytes.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalStructure.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/SequenceableCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/UninterpretedBytes.$(H) $(STCHDR)
$(OUTDIR)ZmqApiPollItem.$(O) ZmqApiPollItem.$(C) ZmqApiPollItem.$(H): ZmqApiPollItem.st $(INCLUDE_TOP)/stx/libbasic/ArrayedCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/Collection.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalBytes.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalStructure.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/SequenceableCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/UninterpretedBytes.$(H) $(STCHDR)
$(OUTDIR)ZmqApiPollItemV4.$(O) ZmqApiPollItemV4.$(C) ZmqApiPollItemV4.$(H): ZmqApiPollItemV4.st $(INCLUDE_TOP)/stx/libbasic/ArrayedCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/Collection.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalBytes.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalStructure.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/SequenceableCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/UninterpretedBytes.$(H) $(STCHDR)
$(OUTDIR)ZmqApiSize.$(O) ZmqApiSize.$(C) ZmqApiSize.$(H): ZmqApiSize.st $(INCLUDE_TOP)/stx/libbasic/ArrayedCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/Collection.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalBytes.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalStructure.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/SequenceableCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/UninterpretedBytes.$(H) $(STCHDR)
$(OUTDIR)ZmqApiSocket.$(O) ZmqApiSocket.$(C) ZmqApiSocket.$(H): ZmqApiSocket.st $(INCLUDE_TOP)/stx/libbasic/ArrayedCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/Collection.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalBytes.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalStructure.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/SequenceableCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/UninterpretedBytes.$(H) $(STCHDR)
$(OUTDIR)ZmqApiStructForInt.$(O) ZmqApiStructForInt.$(C) ZmqApiStructForInt.$(H): ZmqApiStructForInt.st $(INCLUDE_TOP)/stx/libbasic/ArrayedCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/Collection.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalBytes.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalStructure.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/SequenceableCollection.$(H) $(INCLUDE_TOP)/stx/libbasic/UninterpretedBytes.$(H) $(STCHDR)
$(OUTDIR)ZmqContext.$(O) ZmqContext.$(C) ZmqContext.$(H): ZmqContext.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqEventFilter.$(O) ZmqEventFilter.$(C) ZmqEventFilter.$(H): ZmqEventFilter.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqLog.$(O) ZmqLog.$(C) ZmqLog.$(H): ZmqLog.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqResource.$(O) ZmqResource.$(C) ZmqResource.$(H): ZmqResource.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqSocket.$(O) ZmqSocket.$(C) ZmqSocket.$(H): ZmqSocket.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqSocketAssociation.$(O) ZmqSocketAssociation.$(C) ZmqSocketAssociation.$(H): ZmqSocketAssociation.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqTerminatedContext.$(O) ZmqTerminatedContext.$(C) ZmqTerminatedContext.$(H): ZmqTerminatedContext.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqVersion.$(O) ZmqVersion.$(C) ZmqVersion.$(H): ZmqVersion.st $(INCLUDE_TOP)/stx/libbasic/Magnitude.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)stx_goodies_communication_zeromq.$(O) stx_goodies_communication_zeromq.$(C) stx_goodies_communication_zeromq.$(H): stx_goodies_communication_zeromq.st $(INCLUDE_TOP)/stx/libbasic/LibraryDefinition.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/ProjectDefinition.$(H) $(STCHDR)
$(OUTDIR)Zmq2Api.$(O) Zmq2Api.$(C) Zmq2Api.$(H): Zmq2Api.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqApi.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalLibrary.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Zmq3Api.$(O) Zmq3Api.$(C) Zmq3Api.$(H): Zmq3Api.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqApi.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalLibrary.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqDealerSocket.$(O) ZmqDealerSocket.$(C) ZmqDealerSocket.$(H): ZmqDealerSocket.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqSocket.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqGlobalPoller.$(O) ZmqGlobalPoller.$(C) ZmqGlobalPoller.$(H): ZmqGlobalPoller.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqResource.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqPairSocket.$(O) ZmqPairSocket.$(C) ZmqPairSocket.$(H): ZmqPairSocket.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqSocket.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqPollIn.$(O) ZmqPollIn.$(C) ZmqPollIn.$(H): ZmqPollIn.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqEventFilter.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqPollOut.$(O) ZmqPollOut.$(C) ZmqPollOut.$(H): ZmqPollOut.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqEventFilter.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqPoller.$(O) ZmqPoller.$(C) ZmqPoller.$(H): ZmqPoller.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqResource.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqPublisherSocket.$(O) ZmqPublisherSocket.$(C) ZmqPublisherSocket.$(H): ZmqPublisherSocket.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqSocket.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqPullSocket.$(O) ZmqPullSocket.$(C) ZmqPullSocket.$(H): ZmqPullSocket.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqSocket.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqPushSocket.$(O) ZmqPushSocket.$(C) ZmqPushSocket.$(H): ZmqPushSocket.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqSocket.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqRequestSocket.$(O) ZmqRequestSocket.$(C) ZmqRequestSocket.$(H): ZmqRequestSocket.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqSocket.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqResponseSocket.$(O) ZmqResponseSocket.$(C) ZmqResponseSocket.$(H): ZmqResponseSocket.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqSocket.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqRouterSocket.$(O) ZmqRouterSocket.$(C) ZmqRouterSocket.$(H): ZmqRouterSocket.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqSocket.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqSocketBind.$(O) ZmqSocketBind.$(C) ZmqSocketBind.$(H): ZmqSocketBind.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqSocketAssociation.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqSocketConnection.$(O) ZmqSocketConnection.$(C) ZmqSocketConnection.$(H): ZmqSocketConnection.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqSocketAssociation.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)ZmqSubscriberSocket.$(O) ZmqSubscriberSocket.$(C) ZmqSubscriberSocket.$(H): ZmqSubscriberSocket.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqSocket.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Zmq4Api.$(O) Zmq4Api.$(C) Zmq4Api.$(H): Zmq4Api.st $(INCLUDE_TOP)/stx/goodies/communication/zeromq/Zmq3Api.$(H) $(INCLUDE_TOP)/stx/goodies/communication/zeromq/ZmqApi.$(H) $(INCLUDE_TOP)/stx/libbasic/ExternalLibrary.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)

# ENDMAKEDEPEND --- do not remove this line

