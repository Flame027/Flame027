"{ Package: 'stx:goodies/refactoryBrowser/browser' }"

BrowserApplicationModel subclass:#RewriteRuleEditor
	instanceVariableNames:'newCode originalCode environment method'
	classVariableNames:''
	poolDictionaries:''
	category:'Refactory-Rewrite Tool'
!


!RewriteRuleEditor class methodsFor:'instance creation'!

rewrite: aString 
	^(self new) rewrite: aString;
		yourself
! !

!RewriteRuleEditor class methodsFor:'interface specs'!

windowSpec
	"UIPainter new openOnClass: self andSelector: #windowSpec"

	<resource: #canvas>
	^#(#FullSpec 
		#window: 
		#(#WindowSpec 
			#label: 'Rewrite Rule Editor' 
			#bounds: #(#Rectangle 313 355 834 730 ) ) 
		#component: 
		#(#SpecCollection 
			#collection: #(
				#(#TextEditorSpec 
					#layout: #(#LayoutFrame 2 0 25 0 -95 1 -1 0.5 ) 
					#name: #originalCode 
					#model: #originalCode ) 
				#(#TextEditorSpec 
					#layout: #(#LayoutFrame 2 0 25 0.5 -95 1 -2 1 ) 
					#name: #newCode 
					#model: #newCode ) 
				#(#CheckBoxSpec 
					#layout: #(#LayoutOrigin -93 1 25 0.5 ) 
					#name: #method 
					#model: #method 
					#label: 'Method' ) 
				#(#ActionButtonSpec 
					#layout: #(#LayoutFrame -93 1 -103 1 -2 1 -73 1 ) 
					#name: #selectMethods 
					#model: #selectMethods 
					#label: 'Methods...' ) 
				#(#ActionButtonSpec 
					#layout: #(#LayoutFrame -93 1 -68 1 -2 1 -38 1 ) 
					#name: #find 
					#model: #find 
					#label: 'Search...' ) 
				#(#ActionButtonSpec 
					#layout: #(#LayoutFrame -93 1 -33 1 -2 1 -2 1 ) 
					#name: #replace 
					#model: #replace
					#label: 'Replace...' ) 
				#(#LabelSpec 
					#layout: #(#Point 2 2 ) 
					#label: 'Search for:' ) 
				#(#LabelSpec 
					#layout: #(#LayoutOrigin 2 0 0 0.5 ) 
					#label: 'Replace with:' ) 
				#(#LabelSpec 
					#layout: #(#LayoutOrigin -93 1 25 0 ) 
					#label: '` = meta var' ) 
				#(#LabelSpec 
					#layout: #(#LayoutOrigin -93 1 50 0 ) 
					#label: '@ = list' ) 
				#(#LabelSpec 
					#layout: #(#LayoutOrigin -93 1 75 0 ) 
					#label: '` = recurse into' ) 
				#(#LabelSpec 
					#layout: #(#LayoutOrigin -93 1 100 0 ) 
					#label: '. = statement' ) 
				#(#LabelSpec 
					#layout: #(#LayoutOrigin -93 1 125 0 ) 
					#label: '# = literal' ) ) ) )
! !

!RewriteRuleEditor methodsFor:'accessing'!

isMethod
	^self method value
!

replaceText
	^newCode value asString
!

searchText
	^originalCode value asString
! !

!RewriteRuleEditor methodsFor:'actions'!

find
	(self verify: #originalCode) ifFalse: [^self].
	(ParseTreeLintRule 
		createParseTreeRule: (Array with: self searchText)
		method: self isMethod
		name: 'Search for: ' , self searchText) runOnEnvironment: environment
!

replace
	((self verify: #originalCode) and: [self verify: #newCode]) ifFalse: [^self].
	(TransformationRule
		rewrite: (Array with: (Array with: self searchText with: self replaceText))
		methods: self isMethod
		name: self searchText , ' -> ' , self replaceText)
			runOnEnvironment: environment
!

selectMethods
	| environmentEditor |
	environmentEditor := ClassSelectionDialog onEnvironment: environment.
	environmentEditor open
		ifTrue: [environment := environmentEditor selectedEnvironment]
!

verify: aSymbol 
	| widget symbol controller |
	widget := builder componentAt: aSymbol.
	widget isNil ifTrue: [^false].
	controller := widget widget controller.
	symbol := self isMethod
				ifTrue: [#parseRewriteMethod:onError:]
				ifFalse: [#parseRewriteExpression:onError:].
	RBParser
		perform: symbol
		with: controller text
		with: 
			[:aString :position | 
			controller insertAndSelect: aString , ' ->' at: position.
			^false].
	^true
! !

!RewriteRuleEditor methodsFor:'aspects'!

method
	"This method was generated by UIDefiner.  Any edits made here
	may be lost whenever methods are automatically defined.  The
	initialization provided below may have been preempted by an
	initialize method."

	^method isNil
		ifTrue:
			[method := false asValue]
		ifFalse:
			[method]
!

newCode
	"This method was generated by UIDefiner.  Any edits made here
	may be lost whenever methods are automatically defined.  The
	initialization provided below may have been preempted by an
	initialize method."

	^newCode isNil
		ifTrue:
			[newCode := String new asValue]
		ifFalse:
			[newCode]
!

originalCode
	"This method was generated by UIDefiner.  Any edits made here
	may be lost whenever methods are automatically defined.  The
	initialization provided below may have been preempted by an
	initialize method."

	^originalCode isNil
		ifTrue:
			[originalCode := String new asValue]
		ifFalse:
			[originalCode]
! !

!RewriteRuleEditor methodsFor:'initialize-release'!

environment: anEnvironment 
	environment := ClassEnvironment onEnvironment: anEnvironment.
	anEnvironment classesDo: [:each | environment addClass: each]
!

initialize
	super initialize.
	environment := ClassEnvironment new
!

rewrite: aString 
	self originalCode value: aString asText.
	self open
! !

!RewriteRuleEditor class methodsFor:'documentation'!

version
    ^ '$Header: /cvs/stx/stx/goodies/refactoryBrowser/browser/RewriteRuleEditor.st,v 1.9 2003-10-02 17:39:55 cg Exp $'
! !
