"{ Package: 'stx:goodies/refactoryBrowser/browser' }"

CodeTool subclass:#MenuViewer
	instanceVariableNames:'selection'
	classVariableNames:''
	poolDictionaries:''
	category:'Refactory-Code Tools'
!

MenuViewer comment:'MenuViewer is a class to view menus graphically instead of textually. This is used when you are viewing a menu resource.

Instance Variables:
	selection       <ValueHolder on: Symbol>        contains the last selection from the menu'
!


!MenuViewer class methodsFor:'interface specs'!

windowSpec
	"UIPainter new openOnClass: self andSelector: #windowSpec"

	<resource: #canvas>
	^#(#FullSpec
		#window:
		#(#WindowSpec
			#label: 'Unlabeled Canvas'
			#bounds: #(#Rectangle 171 191 653 550 ) )
		#component:
		#(#SpecCollection
			#collection: #(
				#(#MenuButtonSpec
					#layout: #(#LayoutFrame -50 0.5 10 0 50 0.5 40 0 )
					#name: #menu
					#model: #selection
					#label: 'Menu'
					#menu: #menu )
				#(#InputFieldSpec
					#layout: #(#LayoutFrame 10 0 65 0 -10 1 90 0 )
					#name: #selection
					#flags: 0
					#model: #selection
					#alignment: #center
					#type: #object ) ) ) )
! !

!MenuViewer methodsFor:'accessing'!

menu
        ^
        [| class selector method |

        class := self selectedClass.
        selector := self selector.
        selector notNil
                ifTrue: 
                        [method := class compiledMethodAt: selector ifAbsent: [nil].
                        (method notNil and: [method resourceType == #menu])
                                ifTrue: [self errorSignal handle: [:ex | ex returnWith: Menu new]
                                                do: [self initializeMenu: (self nonMetaClass perform: selector)]]
                                ifFalse: [Menu new]]
                ifFalse: [Menu new]]
! !

!MenuViewer methodsFor:'aspects'!

selection
	"This method was generated by UIDefiner.  Any edits made here
	may be lost whenever methods are automatically defined.  The
	initialization provided below may have been preempted by an
	initialize method."

	^selection isNil
		ifTrue:
			[selection := nil asValue]
		ifFalse:
			[selection]
! !

!MenuViewer methodsFor:'private'!

initializeMenu: aMenu
        |menu|

        (menu := aMenu) isArray ifTrue:[
            menu := menu decodeAsLiteralArray.
        ].

        menu values: (menu values collect: [:each | [self selection value: each]]).
        menu menuItems do: [:each | each submenu notNil ifTrue: [each submenu: (self initializeMenu: each submenu)]].
        ^menu
! !

!MenuViewer class methodsFor:'documentation'!

version
    ^ '$Header: /cvs/stx/stx/goodies/refactoryBrowser/browser/MenuViewer.st,v 1.7 2003-09-23 10:44:14 cg Exp $'
! !
