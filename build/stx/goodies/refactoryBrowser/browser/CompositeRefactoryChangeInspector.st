"{ Package: 'stx:goodies/refactoryBrowser/browser' }"

BrowserApplicationModel subclass:#CompositeRefactoryChangeInspector
	instanceVariableNames:'changes changeDescription refactoryBuilder'
	classVariableNames:''
	poolDictionaries:''
	category:'Refactory-Refactorings UI'
!

CompositeRefactoryChangeInspector comment:'RefactoryBuilderInspector is a special inspector for a RefactoryBuilder.

Instance Variables:
	changeDescription       <ValueHolder on: String>        the description of the change selected at the top
	changes <SelectionInList on: RefactoryChange>   the list of changes at the top of the window
	refactoryBuilder        <RefactoryBuilder>      the object we''re inspecting'
!


!CompositeRefactoryChangeInspector class methodsFor:'interface opening'!

openOn: aRefactoryBuilder 
	self new inspect: aRefactoryBuilder
! !

!CompositeRefactoryChangeInspector class methodsFor:'interface specs'!

windowSpec
	"UIPainter new openOnClass: self andSelector: #windowSpec"

	<resource: #canvas>
	^#(#FullSpec 
		#window: 
		#(#WindowSpec 
			#label: 'RefactoryBuilder' 
			#bounds: #(#Rectangle 313 304 921 755 ) ) 
		#component: 
		#(#SpecCollection 
			#collection: #(
				#(#SequenceViewSpec 
					#layout: #(#LayoutFrame 2 0 2 0 -2 1 -1 0.333333 ) 
					#name: #changes 
					#model: #changes 
					#callbacksSpec: 
					#(#UIEventCallbackSubSpec 
						#valueChangeSelector: #changedChange ) 
					#menu: #changesMenu ) 
				#(#TextEditorSpec 
					#layout: #(#LayoutFrame 2 0 1 0.333333 -2 1 -2 1 ) 
					#name: #changeDescription 
					#model: #changeDescription 
					#isReadOnly: true ) ) ) )
! !

!CompositeRefactoryChangeInspector class methodsFor:'resources'!

changesMenu
	"MenuEditor new openOnClass: self andSelector: #changesMenu"

	<resource: #menu>
	^#(#Menu #(
			#(#MenuItem 
				#rawLabel: 'execute' 
				#value: #executeChange ) 
			#(#MenuItem 
				#rawLabel: 'execute all' 
				#value: #executeAll ) 
			#(#MenuItem 
				#rawLabel: 'remove' 
				#value: #removeChange ) 
			#(#MenuItem 
				#rawLabel: 'remove class' 
				#value: #removeClass ) ) #(2 2 ) nil ) decodeAsLiteralArray
! !

!CompositeRefactoryChangeInspector methodsFor:'actions'!

executeAll
	self performChange: refactoryBuilder withMessage: 'Compiling changes'
!

executeChange
	self performChange: self changes selection
!

removeChange
	refactoryBuilder removeChange: self changes selection.
	self changes list remove: self changes selection.
	self changedChange
!

removeClass
	| class |
	class := self changes selection changeClass.
	self changes list copy do: 
			[:each | 
			each changeClass == class ifTrue: 
					[refactoryBuilder removeChange: each.
					self changes list remove: each]].
	self changedChange
! !

!CompositeRefactoryChangeInspector methodsFor:'aspects'!

changeDescription
	"This method was generated by UIDefiner.  Any edits made here
	may be lost whenever methods are automatically defined.  The
	initialization provided below may have been preempted by an
	initialize method."

	^changeDescription isNil
		ifTrue:
			[changeDescription := String new asValue]
		ifFalse:
			[changeDescription]
!

changes
	"This method was generated by UIDefiner.  Any edits made here
	may be lost whenever methods are automatically defined.  The
	initialization provided below may have been preempted by an
	initialize method."

	^changes isNil
		ifTrue:
			[changes := SelectionInList new]
		ifFalse:
			[changes]
! !

!CompositeRefactoryChangeInspector methodsFor:'changing'!

changedChange
	| change |
	change := self changes selection.
	changeDescription
		value: (change isNil ifTrue: [''] ifFalse: [change printString])
! !

!CompositeRefactoryChangeInspector methodsFor:'initialize-release'!

inspect: aRefactoryBuilder 
	refactoryBuilder := aRefactoryBuilder.
	self open.
	self changes list: (List withAll: refactoryBuilder changes)
! !

!CompositeRefactoryChangeInspector methodsFor:'menu'!

changesMenu
	^[self changes selection isNil
		ifTrue: [self disableMenu: self class changesMenu except: #('execute all')]
		ifFalse: [self class changesMenu]]
! !

!CompositeRefactoryChangeInspector class methodsFor:'documentation'!

version
    ^ '$Header: /cvs/stx/stx/goodies/refactoryBrowser/browser/CompositeRefactoryChangeInspector.st,v 1.5 2003-10-02 17:39:55 cg Exp $'
! !
