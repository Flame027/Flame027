"{ Package: 'stx:goodies/refactoryBrowser/browser' }"

BrowserApplicationModel subclass:#RefactoryBuilderInspector
	instanceVariableNames:'changes changeDescription refactoryBuilder'
	classVariableNames:''
	poolDictionaries:''
	category:'Refactory-Support'
!

RefactoryBuilderInspector comment:'RefactoryBuilderInspector is a special inspector for a RefactoryBuilder.

Instance Variables:
	changeDescription       <ValueHolder on: String>        the description of the change selected at the top
	changes <SelectionInList on: RefactoryChange>   the list of changes at the top of the window
	refactoryBuilder        <RefactoryBuilder>      the object we''re inspecting'
!


!RefactoryBuilderInspector class methodsFor:'interface opening'!

openOn: aRefactoryBuilder 
	self new inspect: aRefactoryBuilder
! !

!RefactoryBuilderInspector class methodsFor:'interface specs'!

windowSpec
	"UIPainter new openOnClass: self andSelector: #windowSpec"

	<resource: #canvas>
	^#(#FullSpec 
		#window: 
		#(#WindowSpec 
			#label: 'RefactoryBuilder' 
			#bounds: #(#Rectangle 313 304 921 755 ) ) 
		#component: 
		#(#SpecCollection 
			#collection: #(
				#(#SequenceViewSpec 
					#layout: #(#LayoutFrame 2 0 2 0 -2 1 -1 0.333333 ) 
					#name: #changes 
					#model: #changes 
					#callbacksSpec: 
					#(#UIEventCallbackSubSpec 
						#valueChangeSelector: #changedChange ) 
					#menu: #changesMenu ) 
				#(#TextEditorSpec 
					#layout: #(#LayoutFrame 2 0 1 0.333333 -2 1 -2 1 ) 
					#name: #changeDescription 
					#model: #changeDescription 
					#isReadOnly: true ) ) ) )
! !

!RefactoryBuilderInspector class methodsFor:'resources'!

changesMenu
	"MenuEditor new openOnClass: self andSelector: #changesMenu"

	<resource: #menu>
	^#(#Menu #(
			#(#MenuItem 
				#rawLabel: 'execute' 
				#value: #executeChange ) 
			#(#MenuItem 
				#rawLabel: 'execute all' 
				#value: #executeAll ) 
			#(#MenuItem 
				#rawLabel: 'remove' 
				#value: #removeChange ) 
			#(#MenuItem 
				#rawLabel: 'remove class' 
				#value: #removeClass ) ) #(2 2 ) nil ) decodeAsLiteralArray
! !

!RefactoryBuilderInspector methodsFor:'actions'!

executeAll
	refactoryBuilder doIt: 'Compiling changes'
!

executeChange
	self changes selection doIt
!

removeChange
	refactoryBuilder removeChange: self changes selection.
	self changes list remove: self changes selection.
	self changedChange
!

removeClass
	| class |
	class := self changes selection changeClass.
	self changes list copy do: 
			[:each | 
			each changeClass == class ifTrue: 
					[refactoryBuilder removeChange: each.
					self changes list remove: each]].
	self changedChange
! !

!RefactoryBuilderInspector methodsFor:'aspects'!

changeDescription
	"This method was generated by UIDefiner.  Any edits made here
	may be lost whenever methods are automatically defined.  The
	initialization provided below may have been preempted by an
	initialize method."

	^changeDescription isNil
		ifTrue:
			[changeDescription := String new asValue]
		ifFalse:
			[changeDescription]
!

changes
	"This method was generated by UIDefiner.  Any edits made here
	may be lost whenever methods are automatically defined.  The
	initialization provided below may have been preempted by an
	initialize method."

	^changes isNil
		ifTrue:
			[changes := SelectionInList new]
		ifFalse:
			[changes]
! !

!RefactoryBuilderInspector methodsFor:'changing'!

changedChange
	| change |
	change := self changes selection.
	changeDescription
		value: (change isNil ifTrue: [''] ifFalse: [change printString])
! !

!RefactoryBuilderInspector methodsFor:'initialize-release'!

inspect: aRefactoryBuilder 
	refactoryBuilder := aRefactoryBuilder.
	self open.
	self changes list: (List withAll: refactoryBuilder changes)
! !

!RefactoryBuilderInspector methodsFor:'menu'!

changesMenu
	^[self changes selection isNil
		ifTrue: [self disableMenu: self class changesMenu except: #('execute all')]
		ifFalse: [self class changesMenu]]
! !

!RefactoryBuilderInspector class methodsFor:'documentation'!

version
    ^ '$Header: /cvs/stx/stx/goodies/refactoryBrowser/browser/RefactoryBuilderInspector.st,v 1.6 2003-10-02 17:39:55 cg Exp $'
! !
