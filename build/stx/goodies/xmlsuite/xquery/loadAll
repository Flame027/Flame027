"/
"/ $Header: /opt/data/cvs/stx/goodies/xmlsuite/xquery/loadAll,v 1.24 2008-01-02 14:09:38 wrobll1 Exp $
"/
"/ loadAll-file to fileIn code for: stx:goodies/xmlsuite/xquery
"/
"/ Automatically generated by the browsers generate-loadAll function.
"/ DO NOT MODIFY THIS fILE;
"/
"/
"/ Prerequisites:
"/
"/ Smalltalk loadPackage:'module:directory'.
"/ Smalltalk loadPackage:'....'.
!
'Executing preLoad script if any...' infoPrintCR.
Smalltalk fileIn:'preLoad.st'.
!
"{ package:'stx:goodies/xmlsuite/xquery' }"
!

|files|

'loading package stx:goodies/xmlsuite/xquery...' infoPrintCR.

files := #(
  'XQuery__ConstructedKindDocumentAdaptor.st'
  'XQuery__SequenceItem.st'
  'XQuery__SequenceItemKind.st'
  'XQuery__AstNode.st'
  'XQuery__AstNodeVisitor.st'
  'XQuery__FunctionLibrary.st'
  'XQuery__FunctionParam.st'
  'XQuery__QueryInspectorUI.st'
  'XQuery__TypeItem.st'
  'XQuery__UpdateCommand.st'
  'XQuery__Workspace.st'
  'XQuery__WorkspaceApplication.st'
  'XQuery__WorkspaceUI.st'
  'XQuery__XQueryContext.st'
  'XQuery__XQueryDataContextItem.st'
  'XQuery__XQueryDocumentAdaptorTests.st'
  'XQuery__XQueryDocumentProviderTestResource.st'
  'XQuery__XQueryExecutor.st'
  'XQuery__XQueryExecutorTests.st'
  'XQuery__XQueryFocus.st'
  'XQuery__XQueryFuncTable.st'
  'XQuery__XQueryFunction.st'
  'XQuery__XQueryInterpreter.st'
  'XQuery__XQueryInterpreterError.st'
  'XQuery__XQueryOrderByItem.st'
  'XQuery__XQueryOrderSpecItem.st'
  'XQuery__XQueryParser.st'
  'XQuery__XQueryParserError.st'
  'XQuery__XQueryResult.st'
  'XQuery__XQueryResultItem.st'
  'XQuery__XQueryResultXMLReader.st'
  'XQuery__XQueryScanner.st'
  'XQuery__XQuerySequence.st'
  'XQuery__XQuerySequenceItem.st'
  'XQuery__XQueryTupleItem.st'
  'XQuery__XQueryTypeTests.st'
  'XQuery__XQueryUpdateFacilityTests.st'
  'XQuery__AstAbbrevForwardStep.st'
  'XQuery__AstAdditiveExpr.st'
  'XQuery__AstAndExpr.st'
  'XQuery__AstAnyKindTest.st'
  'XQuery__AstAttribNameOrWildcard.st'
  'XQuery__AstAttributeTest.st'
  'XQuery__AstAxisStep.st'
  'XQuery__AstBooleanLiteral.st'
  'XQuery__AstCompAttrConstructor.st'
  'XQuery__AstCompDocConstructor.st'
  'XQuery__AstCompElemConstructor.st'
  'XQuery__AstCompTextConstructor.st'
  'XQuery__AstComparisonExpr.st'
  'XQuery__AstContextItemExpr.st'
  'XQuery__AstDecimalLiteral.st'
  'XQuery__AstDefaultNamespaceDecl.st'
  'XQuery__AstDeleteExpr.st'
  'XQuery__AstDirAttributeList.st'
  'XQuery__AstDirElemConstructor.st'
  'XQuery__AstDirElemContent.st'
  'XQuery__AstDocumentTest.st'
  'XQuery__AstDoubleLiteral.st'
  'XQuery__AstDummyNode.st'
  'XQuery__AstElementNameOrWildcard.st'
  'XQuery__AstElementTest.st'
  'XQuery__AstEnclosedExpr.st'
  'XQuery__AstExpr.st'
  'XQuery__AstFLWORExpr.st'
  'XQuery__AstFLWORExpr_ForLet.st'
  'XQuery__AstFilterExpr.st'
  'XQuery__AstForClause.st'
  'XQuery__AstForwardStep.st'
  'XQuery__AstFunctionCall.st'
  'XQuery__AstFunctionDecl.st'
  'XQuery__AstFunctionParametersList.st'
  'XQuery__AstIfExpr.st'
  'XQuery__AstInsertExpr.st'
  'XQuery__AstIntegerLiteral.st'
  'XQuery__AstIntersectExceptExpr.st'
  'XQuery__AstLetClause.st'
  'XQuery__AstMainModule.st'
  'XQuery__AstMultiplicativeExpr.st'
  'XQuery__AstNCName.st'
  'XQuery__AstNameTest.st'
  'XQuery__AstNamespaceDecl.st'
  'XQuery__AstOrExpr.st'
  'XQuery__AstOrderByClause.st'
  'XQuery__AstOrderModifier.st'
  'XQuery__AstOrderSpec.st'
  'XQuery__AstOrderSpecList.st'
  'XQuery__AstParam.st'
  'XQuery__AstParenthesizedExpr.st'
  'XQuery__AstPathExpr.st'
  'XQuery__AstPredefinedEntityRef.st'
  'XQuery__AstPredicate.st'
  'XQuery__AstPredicateList.st'
  'XQuery__AstProlog.st'
  'XQuery__AstQName.st'
  'XQuery__AstQuantifiedExpr.st'
  'XQuery__AstQuantifiedExpr_Impl.st'
  'XQuery__AstRangeExpr.st'
  'XQuery__AstRelativePathExpr.st'
  'XQuery__AstRenameExpr.st'
  'XQuery__AstReplaceExpr.st'
  'XQuery__AstReplaceValueOfExpr.st'
  'XQuery__AstReverseStep.st'
  'XQuery__AstStringLiteral.st'
  'XQuery__AstTextTest.st'
  'XQuery__AstTransformCopyClause.st'
  'XQuery__AstTransformExpr.st'
  'XQuery__AstUnaryExpr.st'
  'XQuery__AstUnionExpr.st'
  'XQuery__AstVarRef.st'
  'XQuery__AstWhereClause.st'
  'XQuery__AstWildcard.st'
  'XQuery__CompositeCommand.st'
  'XQuery__DeleteCommand.st'
  'XQuery__EmptyCommand.st'
  'XQuery__FnLibrary.st'
  'XQuery__InsertCommand.st'
  'XQuery__LibraryFunction.st'
  'XQuery__RenameCommand.st'
  'XQuery__ReplaceCommand.st'
  'XQuery__ReplaceElementContentCommand.st'
  'XQuery__ReplaceValueOfCommand.st'
  'XQuery__TypeNode.st'
  'XQuery__TypeXSAnyAtomicType.st'
  'XQuery__UserDefinedFunction.st'
  'XQuery__XQueryAccessedNode.st'
  'XQuery__XQueryConstructedNode.st'
  'XQuery__AstInsertAfterExpr.st'
  'XQuery__AstInsertAsFirstIntoExpr.st'
  'XQuery__AstInsertAsLastIntoExpr.st'
  'XQuery__AstInsertBeforeExpr.st'
  'XQuery__AstInsertIntoExpr.st'
  'XQuery__InsertAfterCommand.st'
  'XQuery__InsertAsFirstIntoCommand.st'
  'XQuery__InsertAsLastIntoCommand.st'
  'XQuery__InsertBeforeCommand.st'
  'XQuery__InsertIntoCommand.st'
  'XQuery__TypeAttribute.st'
  'XQuery__TypeComment.st'
  'XQuery__TypeDocument.st'
  'XQuery__TypeElement.st'
  'XQuery__TypeProcessingInstruction.st'
  'XQuery__TypeText.st'
  'XQuery__TypeXSBoolean.st'
  'XQuery__TypeXSDecimal.st'
  'XQuery__TypeXSDouble.st'
  'XQuery__TypeXSFloat.st'
  'XQuery__TypeXSQName.st'
  'XQuery__TypeXSString.st'
  'XQuery__TypeXSInteger.st'
  'XQuery__TypeXSNormalizedString.st'
  'XQuery__TypeXSToken.st'
  'XQuery__TypeXSName.st'
  'XQuery__TypeXSNCName.st'
  'extensions.st'

) asOrderedCollection.

"/ see if there is a classLibrary
(Smalltalk fileInClassLibrary:'goodies/xmlsuite/xquery') ifTrue:[
    |handle loaded|

    handle := ObjectFileLoader loadedObjectHandles 
                    detect:[:h | h package = 'stx:goodies/xmlsuite/xquery'] ifNone:nil.
    handle ifNotNil:[
        loaded := Set new:(handle classes size).
        handle classes do:[:c| c isMeta ifFalse:[loaded add:c classFilename]].
        files := files asOrderedCollection select:[:f| (loaded includes:f) not].
    ].
].

"/ load files which are not in the classLibrary (all if there is none)
files size > 0 ifTrue:[
  ApplicationLoader::FileLoadingStartedEvent ifNotNil:[
    ApplicationLoader::FileLoadingStartedEvent new
        filenames:files;
        raise
    ].

  files do:[:f |
    f asFilename exists ifTrue:[
        Smalltalk fileIn:f.
        ApplicationLoader::FileLoadedEvent ifNotNil:[
            ApplicationLoader::FileLoadedEvent new
                raise
        ] ifNil:[
            '.' infoPrint.
        ]
    ] ifFalse:[
        Smalltalk fileIn:('source/' , f).
        ApplicationLoader::FileLoadedEvent ifNotNil:[
            ApplicationLoader::FileLoadedEvent new
                raise
        ] ifNil:[
            '.' infoPrint.
                ]
    ]

  ].
  ApplicationLoader::FileLoadingFinishedEvent ifNotNil:[
    ApplicationLoader::FileLoadingFinishedEvent new
        raise
    ].


  ' ' infoPrintCR.
].
' done (stx:goodies/xmlsuite/xquery).' infoPrintCR.
'Executing postLoad script if any...' infoPrintCR.
Smalltalk fileIn:'postLoad.st'.
!
