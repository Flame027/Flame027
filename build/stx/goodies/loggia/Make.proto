# $Header: /cvs/stx/stx/goodies/loggia/Make.proto,v 1.8 2016-12-05 11:54:30 cg Exp $
#
# DO NOT EDIT
# automagically generated from the projectDefinition: stx_goodies_loggia.
#
# Warning: once you modify this file, do not rerun
# stmkmp or projectDefinition-build again - otherwise, your changes are lost.
#
# The Makefile as generated by this Make.proto supports the following targets:
#    make         - compile all st-files to a classLib
#    make clean   - clean all temp files
#    make clobber - clean all
#
# This file contains definitions for Unix based platforms.
# It shares common definitions with the win32-make in Make.spec.

#
# position (of this package) in directory hierarchy:
# (must point to ST/X top directory, for tools and includes)
TOP=../..
INCLUDE_TOP=$(TOP)/..

# subdirectories where targets are to be made:
SUBDIRS=


# subdirectories where Makefiles are to be made:
# (only define if different from SUBDIRS)
# ALLSUBDIRS=

REQUIRED_SUPPORT_DIRS=

# if your embedded C code requires any system includes,
# add the path(es) here:,
# ********** OPTIONAL: MODIFY the next lines ***
# LOCALINCLUDES=-Ifoo -Ibar
LOCALINCLUDES= -I$(INCLUDE_TOP)/stx/goodies/communication -I$(INCLUDE_TOP)/stx/libbasic -I$(INCLUDE_TOP)/stx/libbasic2 -I$(INCLUDE_TOP)/stx/libboss -I$(INCLUDE_TOP)/stx/libtool -I$(INCLUDE_TOP)/stx/libview -I$(INCLUDE_TOP)/stx/libview2 -I$(INCLUDE_TOP)/stx/libwidg2


# if you need any additional defines for embedded C code,
# add them here:,
# ********** OPTIONAL: MODIFY the next lines ***
# LOCALDEFINES=-Dfoo -Dbar -DDEBUG
LOCALDEFINES=

LIBNAME=libstx_goodies_loggia
STCLOCALOPT='-package=$(PACKAGE)' -I. $(LOCALINCLUDES) $(STCLOCALOPTIMIZATIONS) $(STCWARNINGS) $(LOCALDEFINES) -headerDir=.  -varPrefix=$(LIBNAME)


# ********** OPTIONAL: MODIFY the next line ***
# additional C-libraries that should be pre-linked with the class-objects
LD_OBJ_LIBS=
LOCAL_SHARED_LIBS=


# ********** OPTIONAL: MODIFY the next line ***
# additional C targets or libraries should be added below
LOCAL_EXTRA_TARGETS=

OBJS= $(COMMON_OBJS) $(UNIX_OBJS)



all:: preMake classLibRule postMake

pre_objs::  




# Update SVN revision in package definition class
ifneq (,$(findstring .svn,$(wildcard .svn)))
.svnversion: *.st
	if [ -d .svn ]; then \
		rev=$(shell svnversion -n); \
		echo -n $$rev > .svnversion; \
	else \
		echo -n exported > .svnversion; \
	fi

stx_goodies_loggia.o: stx_goodies_loggia.st .svnversion
	@if [ -d .svn ]; then \
		rev2="$(shell printf "%-16s" $$(cat .svnversion))"; \
		echo "  [SV]  Expanding svnRevisionNo in $1.st"; \
		sed -e "s/\"\$$SVN\-Revision:\".*\"\$$\"/\"\$$SVN-Revision:\"\'$$rev2\'\"\$$\"/g" $< > .stx_goodies_loggia.svn.st; \
	fi
	$(MAKE) CC="$(CLASSLIB_CC)" OPT="$(OPT)" SEPINITCODE="$(SEPINITCODE)" STC="$(STC)" STFILE=.stx_goodies_loggia.svn $(C_RULE);
	sed -i -e "s/\".stx_goodies_loggia.svn.st\");/\"\stx_goodies_loggia.st\");/g" .stx_goodies_loggia.svn.c
	$(MAKE) .stx_goodies_loggia.svn.$(O)
	@mv .stx_goodies_loggia.svn.$(O) stx_goodies_loggia.$(O)
endif






# run default testsuite for this package
test: $(TOP)/goodies/builder/reports
	$(MAKE) -C $(TOP)/goodies/builder/reports -f Makefile.init
	$(TOP)/goodies/builder/reports/report-runner.sh -D . -r Builder::TestReport -p $(PACKAGE)



# add more install actions here
install::

# add more install actions for aux-files (resources) here
installAux::

# add more preMake actions here
preMake::

# add more postMake actions here
postMake:: cleanjunk

# build all mandatory prerequisite packages (containing superclasses) for this package
prereq:
	cd ../../libbasic && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "
	cd ../refactoryBrowser/parser && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "
	cd ../../libbasic2 && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "
	cd ../../libbasic3 && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "
	cd ../../libcomp && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "
	cd ../../libui && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "
	cd ../../libview && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "
	cd ../../libboss && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "
	cd ../../libview2 && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "
	cd ../../libwidg && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "
	cd ../../libwidg2 && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "
	cd ../../libtool && $(MAKE) "CFLAGS_LOCAL=$(GLOBALDEFINES) "



# build all packages containing referenced classes for this package
# they are not needed to compile the package (but later, to load it)
references:


cleanjunk::
	-rm -f *.s *.s2

clean::
	-rm -f *.o *.H

clobber:: clean
	-rm -f *.so *.dll


# BEGINMAKEDEPEND --- do not remove this line; make depend needs it
$(OUTDIR)Loggia__AbstractUI.$(O) Loggia__AbstractUI.$(C) Loggia__AbstractUI.$(H): Loggia__AbstractUI.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__LogLevels.$(O) Loggia__LogLevels.$(C) Loggia__LogLevels.$(H): Loggia__LogLevels.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/SharedPool.$(H) $(STCHDR)
$(OUTDIR)Loggia__LogOriginatorProxy.$(O) Loggia__LogOriginatorProxy.$(C) Loggia__LogOriginatorProxy.$(H): Loggia__LogOriginatorProxy.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__LogTransport.$(O) Loggia__LogTransport.$(C) Loggia__LogTransport.$(H): Loggia__LogTransport.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__LoggiaSettingsApplication.$(O) Loggia__LoggiaSettingsApplication.$(C) Loggia__LoggiaSettingsApplication.$(H): Loggia__LoggiaSettingsApplication.st $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libtool/AbstractSettingsApplication.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)stx_goodies_loggia.$(O) stx_goodies_loggia.$(C) stx_goodies_loggia.$(H): stx_goodies_loggia.st $(INCLUDE_TOP)/stx/libbasic/LibraryDefinition.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libbasic/ProjectDefinition.$(H) $(STCHDR)
$(OUTDIR)Loggia__BOSSFileTransportUI.$(O) Loggia__BOSSFileTransportUI.$(C) Loggia__BOSSFileTransportUI.$(H): Loggia__BOSSFileTransportUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__CustomBlockTransport.$(O) Loggia__CustomBlockTransport.$(C) Loggia__CustomBlockTransport.$(H): Loggia__CustomBlockTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__CustomBlockTransportUI.$(O) Loggia__CustomBlockTransportUI.$(C) Loggia__CustomBlockTransportUI.$(H): Loggia__CustomBlockTransportUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__DirectoryTransport.$(O) Loggia__DirectoryTransport.$(C) Loggia__DirectoryTransport.$(H): Loggia__DirectoryTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__DirectoryTransportUI.$(O) Loggia__DirectoryTransportUI.$(C) Loggia__DirectoryTransportUI.$(H): Loggia__DirectoryTransportUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__FacilitiesUI.$(O) Loggia__FacilitiesUI.$(C) Loggia__FacilitiesUI.$(H): Loggia__FacilitiesUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__FileTransport.$(O) Loggia__FileTransport.$(C) Loggia__FileTransport.$(H): Loggia__FileTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__HaltingTransport.$(O) Loggia__HaltingTransport.$(C) Loggia__HaltingTransport.$(H): Loggia__HaltingTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/GenericException.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__InMemoryTransport.$(O) Loggia__InMemoryTransport.$(C) Loggia__InMemoryTransport.$(H): Loggia__InMemoryTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__InMemoryTransportUI.$(O) Loggia__InMemoryTransportUI.$(C) Loggia__InMemoryTransportUI.$(H): Loggia__InMemoryTransportUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__LogFacility.$(O) Loggia__LogFacility.$(C) Loggia__LogFacility.$(H): Loggia__LogFacility.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogLevels.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__LogLevel.$(O) Loggia__LogLevel.$(C) Loggia__LogLevel.$(H): Loggia__LogLevel.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogLevels.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__LogMessage.$(O) Loggia__LogMessage.$(C) Loggia__LogMessage.$(H): Loggia__LogMessage.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogLevels.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__LogMessagesBrowserUI.$(O) Loggia__LogMessagesBrowserUI.$(C) Loggia__LogMessagesBrowserUI.$(H): Loggia__LogMessagesBrowserUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__Logger.$(O) Loggia__Logger.$(C) Loggia__Logger.$(H): Loggia__Logger.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogLevels.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__LoggiaUI.$(O) Loggia__LoggiaUI.$(C) Loggia__LoggiaUI.$(H): Loggia__LoggiaUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__MailTransport.$(O) Loggia__MailTransport.$(C) Loggia__MailTransport.$(H): Loggia__MailTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__MailTransportUI.$(O) Loggia__MailTransportUI.$(C) Loggia__MailTransportUI.$(H): Loggia__MailTransportUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__MultiplexTransport.$(O) Loggia__MultiplexTransport.$(C) Loggia__MultiplexTransport.$(H): Loggia__MultiplexTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__MultiplexTransportUI.$(O) Loggia__MultiplexTransportUI.$(C) Loggia__MultiplexTransportUI.$(H): Loggia__MultiplexTransportUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__NullTransport.$(O) Loggia__NullTransport.$(C) Loggia__NullTransport.$(H): Loggia__NullTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__PlainFileTransportUI.$(O) Loggia__PlainFileTransportUI.$(C) Loggia__PlainFileTransportUI.$(H): Loggia__PlainFileTransportUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__SMSTransport.$(O) Loggia__SMSTransport.$(C) Loggia__SMSTransport.$(H): Loggia__SMSTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__SyslogTransport.$(O) Loggia__SyslogTransport.$(C) Loggia__SyslogTransport.$(H): Loggia__SyslogTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__SyslogTransportUI.$(O) Loggia__SyslogTransportUI.$(C) Loggia__SyslogTransportUI.$(H): Loggia__SyslogTransportUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(STCHDR)
$(OUTDIR)Loggia__TranscriptTransport.$(O) Loggia__TranscriptTransport.$(C) Loggia__TranscriptTransport.$(H): Loggia__TranscriptTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__TransportsUI.$(O) Loggia__TransportsUI.$(C) Loggia__TransportsUI.$(H): Loggia__TransportsUI.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__AbstractUI.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libview2/ApplicationModel.$(H) $(INCLUDE_TOP)/stx/libview2/Model.$(H) $(INCLUDE_TOP)/stx/libview2/SimpleDialog.$(H) $(STCHDR)
$(OUTDIR)Loggia__BOSSFileTransport.$(O) Loggia__BOSSFileTransport.$(C) Loggia__BOSSFileTransport.$(H): Loggia__BOSSFileTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__FileTransport.$(H) $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(INCLUDE_TOP)/stx/libboss/BinaryIOManager.$(H) $(INCLUDE_TOP)/stx/libboss/BinaryOutputManager.$(H) $(STCHDR)
$(OUTDIR)Loggia__PlainFileTransport.$(O) Loggia__PlainFileTransport.$(C) Loggia__PlainFileTransport.$(H): Loggia__PlainFileTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__FileTransport.$(H) $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__CSVTransport.$(O) Loggia__CSVTransport.$(C) Loggia__CSVTransport.$(H): Loggia__CSVTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__FileTransport.$(H) $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__PlainFileTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)
$(OUTDIR)Loggia__LogFileTransport.$(O) Loggia__LogFileTransport.$(C) Loggia__LogFileTransport.$(H): Loggia__LogFileTransport.st $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__FileTransport.$(H) $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__LogTransport.$(H) $(INCLUDE_TOP)/stx/goodies/loggia/Loggia__PlainFileTransport.$(H) $(INCLUDE_TOP)/stx/libbasic/Object.$(H) $(STCHDR)

# ENDMAKEDEPEND --- do not remove this line

