%PASSED Output from Splint 3.1.2
%LCLimports 
%LCLSortTable
%LCLsort bool immutable nil nil
%LCLsort Bool synonym bool nil
%LCLsort int primitive nil nil
%LCLsort char primitive nil nil
%LCLsort void primitive nil nil
%LCLsort _char_Obj obj char nil
%LCLsort __char_Obj_Ptr ptr _char_Obj nil
%LCLsort __char_Obj_Arr arr _char_Obj nil
%LCLsort _char_Vec vec char __char_Obj_Arr
%LCLsort float primitive nil nil
%LCLsort double primitive nil nil
%LCLsort mut immutable nil nil
%LCLsort _mut_Obj mutable mut nil
%LCLsort _int_Obj obj int nil
%LCLsort __int_Obj_Ptr ptr _int_Obj nil
%LCLsort __int_Obj_Arr arr _int_Obj nil
%LCLsort _int_Vec vec int __int_Obj_Arr
%LCLsort ___int_Obj_Ptr_Obj obj __int_Obj_Ptr nil
%LCLsort _salias40s_Struct str salias40s nil
%LCLsort field strMem ___int_Obj_Ptr_Obj nil
%LCLsort val strMem _int_Obj nil
%LCLsort strEnd nil nil nil
%LCLsort _salias40s_Struct_Tuple tup _salias40s_Struct nil
%LCLsort __salias40s_Struct_Ptr ptr _salias40s_Struct nil
%LCLsort __salias40s_Struct_Arr arr _salias40s_Struct nil
%LCLsort __salias40s_Struct_Tuple_Vec vec _salias40s_Struct_Tuple __salias40s_Struct_Arr
%LCLsort _salias41s_Struct str salias41s nil
%LCLsort field strMem ___int_Obj_Ptr_Obj nil
%LCLsort val strMem _int_Obj nil
%LCLsort strEnd nil nil nil
%LCLsort _salias41s_Struct_Tuple tup _salias41s_Struct nil
%LCLsort __salias41s_Struct_Ptr ptr _salias41s_Struct nil
%LCLsort __salias41s_Struct_Arr arr _salias41s_Struct nil
%LCLsort __salias41s_Struct_Tuple_Vec vec _salias41s_Struct_Tuple __salias41s_Struct_Arr
%LCLSortTableEnd
%LCLSymbolTable
%LCLop mod :int, int -> int
%LCLop min :int, int -> int
%LCLop max :int, int -> int
%LCLop 0 : -> int
%LCLop 0 : -> double
%LCLop 1 : -> int
%LCLop 1 : -> double
%LCLop if __ then __ else __  :bool, bool, bool -> bool
%LCLop if __ then __ else __  :bool, int, int -> int
%LCLop if __ then __ else __  :bool, double, double -> double
%LCLop if __ then __ else __  :bool, _char_Vec, _char_Vec -> _char_Vec
%LCLop if __ then __ else __  :bool, char, char -> char
%LCLop __ < __  :int, int -> bool
%LCLop __ < __  :double, double -> bool
%LCLop empty : -> _char_Vec
%LCLop __ > __  :int, int -> bool
%LCLop __ > __  :double, double -> bool
%LCLop count :char, _char_Vec -> int
%LCLop head :_char_Vec -> char
%LCLop __ \inv :double -> double
%LCLop init :_char_Vec -> _char_Vec
%LCLop isEmpty :_char_Vec -> bool
%LCLop last :_char_Vec -> char
%LCLop len :_char_Vec -> int
%LCLop __ \implies __  :bool, bool -> bool
%LCLop prefix :_char_Vec, int -> _char_Vec
%LCLop __ / __  :double, double -> double
%LCLop removePrefix :_char_Vec, int -> _char_Vec
%LCLop substring :_char_Vec, int, int -> _char_Vec
%LCLop __ || __  :_char_Vec, _char_Vec -> _char_Vec
%LCLop tail :_char_Vec -> _char_Vec
%LCLop __ \in __  :char, _char_Vec -> bool
%LCLop nullTerminated :_char_Vec -> bool
%LCLop throughNull :_char_Vec -> _char_Vec
%LCLop sameStr :_char_Vec, _char_Vec -> bool
%LCLop lenStr :_char_Vec -> int
%LCLop times10plus :int, int -> int
%LCLop plus1 :int -> int
%LCLop 2 : -> int
%LCLop 3 : -> int
%LCLop 4 : -> int
%LCLop 5 : -> int
%LCLop 6 : -> int
%LCLop 7 : -> int
%LCLop 8 : -> int
%LCLop 9 : -> int
%LCLop __ * __  :int, int -> int
%LCLop __ * __  :double, double -> double
%LCLop true : -> bool
%LCLop false : -> bool
%LCLop __ \and __  :bool, bool -> bool
%LCLop __ \or __  :bool, bool -> bool
%LCLop __ \eq __  :bool, bool -> bool
%LCLop __ \eq __  :int, int -> bool
%LCLop __ \eq __  :double, double -> bool
%LCLop __ \eq __  :_char_Vec, _char_Vec -> bool
%LCLop __ \eq __  :char, char -> bool
%LCLop \not __  :bool -> bool
%LCLop __ \neq __  :bool, bool -> bool
%LCLop __ \neq __  :int, int -> bool
%LCLop __ \neq __  :double, double -> bool
%LCLop __ \neq __  :_char_Vec, _char_Vec -> bool
%LCLop __ \neq __  :char, char -> bool
%LCLop { __ } :char -> _char_Vec
%LCLop [__, __] :__int_Obj_Ptr, int -> _salias40s_Struct_Tuple
%LCLop [__, __] :__int_Obj_Ptr, int -> _salias41s_Struct_Tuple
%LCLop __ [] :__char_Obj_Ptr -> __char_Obj_Arr
%LCLop __ [] :__int_Obj_Ptr -> __int_Obj_Arr
%LCLop __ [] :__salias40s_Struct_Ptr -> __salias40s_Struct_Arr
%LCLop __ [] :__salias41s_Struct_Ptr -> __salias41s_Struct_Arr
%LCLop __ |- __  :_char_Vec, char -> _char_Vec
%LCLop __ [__] :_char_Vec, int -> char
%LCLop __ [__] :__char_Obj_Arr, int -> _char_Obj
%LCLop __ [__] :_int_Vec, int -> int
%LCLop __ [__] :__int_Obj_Arr, int -> _int_Obj
%LCLop __ [__] :__salias40s_Struct_Tuple_Vec, int -> _salias40s_Struct_Tuple
%LCLop __ [__] :__salias40s_Struct_Arr, int -> _salias40s_Struct
%LCLop __ [__] :__salias41s_Struct_Tuple_Vec, int -> _salias41s_Struct_Tuple
%LCLop __ [__] :__salias41s_Struct_Arr, int -> _salias41s_Struct
%LCLop __ -| __  :char, _char_Vec -> _char_Vec
%LCLop __ \leq __  :int, int -> bool
%LCLop __ \leq __  :double, double -> bool
%LCLop __ \geq __  :int, int -> bool
%LCLop __ \geq __  :double, double -> bool
%LCLop null : -> char
%LCLop __ \select val :_salias40s_Struct_Tuple -> int
%LCLop __ \select val :_salias40s_Struct -> _int_Obj
%LCLop __ \select val :_salias41s_Struct_Tuple -> int
%LCLop __ \select val :_salias41s_Struct -> _int_Obj
%LCLop __ \select field :_salias40s_Struct_Tuple -> __int_Obj_Ptr
%LCLop __ \select field :_salias40s_Struct -> ___int_Obj_Ptr_Obj
%LCLop __ \select field :_salias41s_Struct_Tuple -> __int_Obj_Ptr
%LCLop __ \select field :_salias41s_Struct -> ___int_Obj_Ptr_Obj
%LCLop __ \field_arrow val :__salias40s_Struct_Ptr -> _int_Obj
%LCLop __ \field_arrow val :__salias41s_Struct_Ptr -> _int_Obj
%LCLop __ \field_arrow field :__salias40s_Struct_Ptr -> ___int_Obj_Ptr_Obj
%LCLop __ \field_arrow field :__salias41s_Struct_Ptr -> ___int_Obj_Ptr_Obj
%LCLop NIL : -> __char_Obj_Ptr
%LCLop NIL : -> __int_Obj_Ptr
%LCLop NIL : -> __salias40s_Struct_Ptr
%LCLop NIL : -> __salias41s_Struct_Ptr
%LCLop - __  :int -> int
%LCLop - __  :double -> double
%LCLop __ + __  :__char_Obj_Ptr, int -> __char_Obj_Ptr
%LCLop __ + __  :int, __char_Obj_Ptr -> __char_Obj_Ptr
%LCLop __ + __  :int, int -> int
%LCLop __ + __  :double, double -> double
%LCLop __ + __  :__int_Obj_Ptr, int -> __int_Obj_Ptr
%LCLop __ + __  :int, __int_Obj_Ptr -> __int_Obj_Ptr
%LCLop __ + __  :__salias40s_Struct_Ptr, int -> __salias40s_Struct_Ptr
%LCLop __ + __  :int, __salias40s_Struct_Ptr -> __salias40s_Struct_Ptr
%LCLop __ + __  :__salias41s_Struct_Ptr, int -> __salias41s_Struct_Ptr
%LCLop __ + __  :int, __salias41s_Struct_Ptr -> __salias41s_Struct_Ptr
%LCLop sizeof :bool -> int
%LCLop sizeof :int -> int
%LCLop sizeof :char -> int
%LCLop sizeof :void -> int
%LCLop sizeof :float -> int
%LCLop sizeof :double -> int
%LCLop sizeof :mut -> int
%LCLop __ - __  :__char_Obj_Ptr, int -> __char_Obj_Ptr
%LCLop __ - __  :__char_Obj_Ptr, __char_Obj_Ptr -> int
%LCLop __ - __  :int, int -> int
%LCLop __ - __  :double, double -> double
%LCLop __ - __  :__int_Obj_Ptr, int -> __int_Obj_Ptr
%LCLop __ - __  :__int_Obj_Ptr, __int_Obj_Ptr -> int
%LCLop __ - __  :__salias40s_Struct_Ptr, int -> __salias40s_Struct_Ptr
%LCLop __ - __  :__salias40s_Struct_Ptr, __salias40s_Struct_Ptr -> int
%LCLop __ - __  :__salias41s_Struct_Ptr, int -> __salias41s_Struct_Ptr
%LCLop __ - __  :__salias41s_Struct_Ptr, __salias41s_Struct_Ptr -> int
%LCLop isSub :_char_Vec, int -> bool
%LCLop isSub :__char_Obj_Arr, int -> bool
%LCLop isSub :_int_Vec, int -> bool
%LCLop isSub :__int_Obj_Arr, int -> bool
%LCLop isSub :__salias40s_Struct_Tuple_Vec, int -> bool
%LCLop isSub :__salias40s_Struct_Arr, int -> bool
%LCLop isSub :__salias41s_Struct_Tuple_Vec, int -> bool
%LCLop isSub :__salias41s_Struct_Arr, int -> bool
%LCLop succ :int -> int
%LCLop pred :int -> int
%LCLop abs :int -> int
%LCLop abs :double -> double
%LCLop div :int, int -> int
%LCLtype float float exposed
%LCLtype bool bool immutable
%LCLconst FALSE bool
%LCLconst TRUE bool
%LCLtype float float exposed
%LCLtype bool bool immutable
%LCLconst FALSE bool
%LCLconst TRUE bool
%LCLtype mut _mut_Obj mutable
%LCLfcn mut_create :  -> _mut_Obj 
%LCLfcnGlobals 
%LCLfcn mut_mod : _mut_Obj -> void 
%LCLfcnGlobals 
%LCLvar glob _int_Obj
%LCLvar globp ___int_Obj_Ptr_Obj
%LCLvar globs _salias40s_Struct
%LCLfcn f : _mut_Obj, _mut_Obj -> _mut_Obj 
%LCLfcnGlobals 
%LCLfcn g :  -> int 
%LCLfcnGlobals _int_Obj glob; 
%LCLfcn h :  -> __int_Obj_Ptr 
%LCLfcnGlobals _int_Obj glob; _salias41s_Struct globs; ___int_Obj_Ptr_Obj globp; 
%LCLSymbolTableEnd
