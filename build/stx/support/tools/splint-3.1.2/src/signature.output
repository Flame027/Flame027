Terminals which are not used

   LST_EOL
   LST_COMMENTSYM
   LST_WHITESPACE
   LST_QUANTIFIERSYM
   LST_EQUATIONSYM
   LST_EQSEPSYM
   LST_COMPOSESYM
   LST_LPAR
   LST_RPAR
   LST_assertsTOKEN
   LST_assumesTOKEN
   LST_byTOKEN
   LST_convertsTOKEN
   LST_enumerationTOKEN
   LST_equationsTOKEN
   LST_exemptingTOKEN
   LST_forTOKEN
   LST_generatedTOKEN
   LST_impliesTOKEN
   LST_includesTOKEN
   LST_introducesTOKEN
   LST_ofTOKEN
   LST_partitionedTOKEN
   LST_traitTOKEN
   LST_tupleTOKEN
   LST_unionTOKEN
   LST_BADTOKEN


Grammar

    0 $accept: top $end

    1 top: operatorList

    2 operatorList: operator
    3             | operatorList operator

    4 operator: name LST_COLON signature

    5 name: opId
    6     | opForm

    7 opForm: LST_ifTOKEN LST_MARKERSYM LST_thenTOKEN LST_MARKERSYM LST_elseTOKEN LST_MARKERSYM
    8       | anyOp
    9       | LST_MARKERSYM anyOp
   10       | anyOp LST_MARKERSYM
   11       | LST_MARKERSYM anyOp LST_MARKERSYM
   12       | LST_OPENSYM middle LST_CLOSESYM
   13       | LST_MARKERSYM LST_OPENSYM middle LST_CLOSESYM
   14       | LST_OPENSYM middle LST_CLOSESYM LST_MARKERSYM
   15       | LST_MARKERSYM LST_OPENSYM middle LST_CLOSESYM LST_MARKERSYM
   16       | LST_LBRACKET middle LST_RBRACKET
   17       | LST_MARKERSYM LST_LBRACKET middle LST_RBRACKET
   18       | LST_LBRACKET middle LST_RBRACKET LST_MARKERSYM
   19       | LST_MARKERSYM LST_LBRACKET middle LST_RBRACKET LST_MARKERSYM
   20       | LST_SELECTSYM LST_SIMPLEID
   21       | LST_MARKERSYM LST_SELECTSYM LST_SIMPLEID
   22       | LST_MARKERSYM LST_FIELDMAPSYM LST_SIMPLEID

   23 anyOp: LST_SIMPLEOP
   24      | LST_LOGICALOP
   25      | LST_EQOP

   26 middle: /* empty */
   27       | placeList

   28 placeList: LST_MARKERSYM
   29          | placeList separator LST_MARKERSYM

   30 separator: LST_COMMA
   31          | LST_SEPSYM

   32 signature: domain LST_MAPSYM sortId

   33 domain: /* empty */
   34       | sortList

   35 sortList: sortId
   36         | sortList LST_COMMA sortId

   37 sortId: LST_SIMPLEID

   38 opId: LST_SIMPLEID


Terminals, with rules where they appear

$end (0) 0
error (256)
LST_SIMPLEID (258) 20 21 22 37 38
LST_LOGICALOP (259) 24
LST_EQOP (260) 25
LST_SIMPLEOP (261) 23
LST_MAPSYM (262) 32
LST_FIELDMAPSYM (263) 22
LST_MARKERSYM (264) 7 9 10 11 13 14 15 17 18 19 21 22 28 29
LST_ifTOKEN (265) 7
LST_thenTOKEN (266) 7
LST_elseTOKEN (267) 7
LST_LBRACKET (268) 16 17 18 19
LST_RBRACKET (269) 16 17 18 19
LST_SELECTSYM (270) 20 21
LST_SEPSYM (271) 31
LST_OPENSYM (272) 12 13 14 15
LST_CLOSESYM (273) 12 13 14 15
LST_COLON (274) 4
LST_COMMA (275) 30 36
LST_EOL (276)
LST_COMMENTSYM (277)
LST_WHITESPACE (278)
LST_QUANTIFIERSYM (279)
LST_EQUATIONSYM (280)
LST_EQSEPSYM (281)
LST_COMPOSESYM (282)
LST_LPAR (283)
LST_RPAR (284)
LST_assertsTOKEN (285)
LST_assumesTOKEN (286)
LST_byTOKEN (287)
LST_convertsTOKEN (288)
LST_enumerationTOKEN (289)
LST_equationsTOKEN (290)
LST_exemptingTOKEN (291)
LST_forTOKEN (292)
LST_generatedTOKEN (293)
LST_impliesTOKEN (294)
LST_includesTOKEN (295)
LST_introducesTOKEN (296)
LST_ofTOKEN (297)
LST_partitionedTOKEN (298)
LST_traitTOKEN (299)
LST_tupleTOKEN (300)
LST_unionTOKEN (301)
LST_BADTOKEN (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
top (49)
    on left: 1, on right: 0
operatorList (50)
    on left: 2 3, on right: 1 3
operator (51)
    on left: 4, on right: 2 3
name (52)
    on left: 5 6, on right: 4
opForm (53)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22,
    on right: 6
anyOp (54)
    on left: 23 24 25, on right: 8 9 10 11
middle (55)
    on left: 26 27, on right: 12 13 14 15 16 17 18 19
placeList (56)
    on left: 28 29, on right: 27 29
separator (57)
    on left: 30 31, on right: 29
signature (58)
    on left: 32, on right: 4
domain (59)
    on left: 33 34, on right: 32
sortList (60)
    on left: 35 36, on right: 34 36
sortId (61)
    on left: 37, on right: 32 35 36
opId (62)
    on left: 38, on right: 5


state 0

    0 $accept: . top $end

    LST_SIMPLEID   shift, and go to state 1
    LST_LOGICALOP  shift, and go to state 2
    LST_EQOP       shift, and go to state 3
    LST_SIMPLEOP   shift, and go to state 4
    LST_MARKERSYM  shift, and go to state 5
    LST_ifTOKEN    shift, and go to state 6
    LST_LBRACKET   shift, and go to state 7
    LST_SELECTSYM  shift, and go to state 8
    LST_OPENSYM    shift, and go to state 9

    top           go to state 10
    operatorList  go to state 11
    operator      go to state 12
    name          go to state 13
    opForm        go to state 14
    anyOp         go to state 15
    opId          go to state 16


state 1

   38 opId: LST_SIMPLEID .

    $default  reduce using rule 38 (opId)


state 2

   24 anyOp: LST_LOGICALOP .

    $default  reduce using rule 24 (anyOp)


state 3

   25 anyOp: LST_EQOP .

    $default  reduce using rule 25 (anyOp)


state 4

   23 anyOp: LST_SIMPLEOP .

    $default  reduce using rule 23 (anyOp)


state 5

    9 opForm: LST_MARKERSYM . anyOp
   11       | LST_MARKERSYM . anyOp LST_MARKERSYM
   13       | LST_MARKERSYM . LST_OPENSYM middle LST_CLOSESYM
   15       | LST_MARKERSYM . LST_OPENSYM middle LST_CLOSESYM LST_MARKERSYM
   17       | LST_MARKERSYM . LST_LBRACKET middle LST_RBRACKET
   19       | LST_MARKERSYM . LST_LBRACKET middle LST_RBRACKET LST_MARKERSYM
   21       | LST_MARKERSYM . LST_SELECTSYM LST_SIMPLEID
   22       | LST_MARKERSYM . LST_FIELDMAPSYM LST_SIMPLEID

    LST_LOGICALOP    shift, and go to state 2
    LST_EQOP         shift, and go to state 3
    LST_SIMPLEOP     shift, and go to state 4
    LST_FIELDMAPSYM  shift, and go to state 17
    LST_LBRACKET     shift, and go to state 18
    LST_SELECTSYM    shift, and go to state 19
    LST_OPENSYM      shift, and go to state 20

    anyOp  go to state 21


state 6

    7 opForm: LST_ifTOKEN . LST_MARKERSYM LST_thenTOKEN LST_MARKERSYM LST_elseTOKEN LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 22


state 7

   16 opForm: LST_LBRACKET . middle LST_RBRACKET
   18       | LST_LBRACKET . middle LST_RBRACKET LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 23

    $default  reduce using rule 26 (middle)

    middle     go to state 24
    placeList  go to state 25


state 8

   20 opForm: LST_SELECTSYM . LST_SIMPLEID

    LST_SIMPLEID  shift, and go to state 26


state 9

   12 opForm: LST_OPENSYM . middle LST_CLOSESYM
   14       | LST_OPENSYM . middle LST_CLOSESYM LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 23

    $default  reduce using rule 26 (middle)

    middle     go to state 27
    placeList  go to state 25


state 10

    0 $accept: top . $end

    $end  shift, and go to state 28


state 11

    1 top: operatorList .
    3 operatorList: operatorList . operator

    LST_SIMPLEID   shift, and go to state 1
    LST_LOGICALOP  shift, and go to state 2
    LST_EQOP       shift, and go to state 3
    LST_SIMPLEOP   shift, and go to state 4
    LST_MARKERSYM  shift, and go to state 5
    LST_ifTOKEN    shift, and go to state 6
    LST_LBRACKET   shift, and go to state 7
    LST_SELECTSYM  shift, and go to state 8
    LST_OPENSYM    shift, and go to state 9

    $default  reduce using rule 1 (top)

    operator  go to state 29
    name      go to state 13
    opForm    go to state 14
    anyOp     go to state 15
    opId      go to state 16


state 12

    2 operatorList: operator .

    $default  reduce using rule 2 (operatorList)


state 13

    4 operator: name . LST_COLON signature

    LST_COLON  shift, and go to state 30


state 14

    6 name: opForm .

    $default  reduce using rule 6 (name)


state 15

    8 opForm: anyOp .
   10       | anyOp . LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 31

    $default  reduce using rule 8 (opForm)


state 16

    5 name: opId .

    $default  reduce using rule 5 (name)


state 17

   22 opForm: LST_MARKERSYM LST_FIELDMAPSYM . LST_SIMPLEID

    LST_SIMPLEID  shift, and go to state 32


state 18

   17 opForm: LST_MARKERSYM LST_LBRACKET . middle LST_RBRACKET
   19       | LST_MARKERSYM LST_LBRACKET . middle LST_RBRACKET LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 23

    $default  reduce using rule 26 (middle)

    middle     go to state 33
    placeList  go to state 25


state 19

   21 opForm: LST_MARKERSYM LST_SELECTSYM . LST_SIMPLEID

    LST_SIMPLEID  shift, and go to state 34


state 20

   13 opForm: LST_MARKERSYM LST_OPENSYM . middle LST_CLOSESYM
   15       | LST_MARKERSYM LST_OPENSYM . middle LST_CLOSESYM LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 23

    $default  reduce using rule 26 (middle)

    middle     go to state 35
    placeList  go to state 25


state 21

    9 opForm: LST_MARKERSYM anyOp .
   11       | LST_MARKERSYM anyOp . LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 36

    $default  reduce using rule 9 (opForm)


state 22

    7 opForm: LST_ifTOKEN LST_MARKERSYM . LST_thenTOKEN LST_MARKERSYM LST_elseTOKEN LST_MARKERSYM

    LST_thenTOKEN  shift, and go to state 37


state 23

   28 placeList: LST_MARKERSYM .

    $default  reduce using rule 28 (placeList)


state 24

   16 opForm: LST_LBRACKET middle . LST_RBRACKET
   18       | LST_LBRACKET middle . LST_RBRACKET LST_MARKERSYM

    LST_RBRACKET  shift, and go to state 38


state 25

   27 middle: placeList .
   29 placeList: placeList . separator LST_MARKERSYM

    LST_SEPSYM  shift, and go to state 39
    LST_COMMA   shift, and go to state 40

    $default  reduce using rule 27 (middle)

    separator  go to state 41


state 26

   20 opForm: LST_SELECTSYM LST_SIMPLEID .

    $default  reduce using rule 20 (opForm)


state 27

   12 opForm: LST_OPENSYM middle . LST_CLOSESYM
   14       | LST_OPENSYM middle . LST_CLOSESYM LST_MARKERSYM

    LST_CLOSESYM  shift, and go to state 42


state 28

    0 $accept: top $end .

    $default  accept


state 29

    3 operatorList: operatorList operator .

    $default  reduce using rule 3 (operatorList)


state 30

    4 operator: name LST_COLON . signature

    LST_SIMPLEID  shift, and go to state 43

    $default  reduce using rule 33 (domain)

    signature  go to state 44
    domain     go to state 45
    sortList   go to state 46
    sortId     go to state 47


state 31

   10 opForm: anyOp LST_MARKERSYM .

    $default  reduce using rule 10 (opForm)


state 32

   22 opForm: LST_MARKERSYM LST_FIELDMAPSYM LST_SIMPLEID .

    $default  reduce using rule 22 (opForm)


state 33

   17 opForm: LST_MARKERSYM LST_LBRACKET middle . LST_RBRACKET
   19       | LST_MARKERSYM LST_LBRACKET middle . LST_RBRACKET LST_MARKERSYM

    LST_RBRACKET  shift, and go to state 48


state 34

   21 opForm: LST_MARKERSYM LST_SELECTSYM LST_SIMPLEID .

    $default  reduce using rule 21 (opForm)


state 35

   13 opForm: LST_MARKERSYM LST_OPENSYM middle . LST_CLOSESYM
   15       | LST_MARKERSYM LST_OPENSYM middle . LST_CLOSESYM LST_MARKERSYM

    LST_CLOSESYM  shift, and go to state 49


state 36

   11 opForm: LST_MARKERSYM anyOp LST_MARKERSYM .

    $default  reduce using rule 11 (opForm)


state 37

    7 opForm: LST_ifTOKEN LST_MARKERSYM LST_thenTOKEN . LST_MARKERSYM LST_elseTOKEN LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 50


state 38

   16 opForm: LST_LBRACKET middle LST_RBRACKET .
   18       | LST_LBRACKET middle LST_RBRACKET . LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 51

    $default  reduce using rule 16 (opForm)


state 39

   31 separator: LST_SEPSYM .

    $default  reduce using rule 31 (separator)


state 40

   30 separator: LST_COMMA .

    $default  reduce using rule 30 (separator)


state 41

   29 placeList: placeList separator . LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 52


state 42

   12 opForm: LST_OPENSYM middle LST_CLOSESYM .
   14       | LST_OPENSYM middle LST_CLOSESYM . LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 53

    $default  reduce using rule 12 (opForm)


state 43

   37 sortId: LST_SIMPLEID .

    $default  reduce using rule 37 (sortId)


state 44

    4 operator: name LST_COLON signature .

    $default  reduce using rule 4 (operator)


state 45

   32 signature: domain . LST_MAPSYM sortId

    LST_MAPSYM  shift, and go to state 54


state 46

   34 domain: sortList .
   36 sortList: sortList . LST_COMMA sortId

    LST_COMMA  shift, and go to state 55

    $default  reduce using rule 34 (domain)


state 47

   35 sortList: sortId .

    $default  reduce using rule 35 (sortList)


state 48

   17 opForm: LST_MARKERSYM LST_LBRACKET middle LST_RBRACKET .
   19       | LST_MARKERSYM LST_LBRACKET middle LST_RBRACKET . LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 56

    $default  reduce using rule 17 (opForm)


state 49

   13 opForm: LST_MARKERSYM LST_OPENSYM middle LST_CLOSESYM .
   15       | LST_MARKERSYM LST_OPENSYM middle LST_CLOSESYM . LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 57

    $default  reduce using rule 13 (opForm)


state 50

    7 opForm: LST_ifTOKEN LST_MARKERSYM LST_thenTOKEN LST_MARKERSYM . LST_elseTOKEN LST_MARKERSYM

    LST_elseTOKEN  shift, and go to state 58


state 51

   18 opForm: LST_LBRACKET middle LST_RBRACKET LST_MARKERSYM .

    $default  reduce using rule 18 (opForm)


state 52

   29 placeList: placeList separator LST_MARKERSYM .

    $default  reduce using rule 29 (placeList)


state 53

   14 opForm: LST_OPENSYM middle LST_CLOSESYM LST_MARKERSYM .

    $default  reduce using rule 14 (opForm)


state 54

   32 signature: domain LST_MAPSYM . sortId

    LST_SIMPLEID  shift, and go to state 43

    sortId  go to state 59


state 55

   36 sortList: sortList LST_COMMA . sortId

    LST_SIMPLEID  shift, and go to state 43

    sortId  go to state 60


state 56

   19 opForm: LST_MARKERSYM LST_LBRACKET middle LST_RBRACKET LST_MARKERSYM .

    $default  reduce using rule 19 (opForm)


state 57

   15 opForm: LST_MARKERSYM LST_OPENSYM middle LST_CLOSESYM LST_MARKERSYM .

    $default  reduce using rule 15 (opForm)


state 58

    7 opForm: LST_ifTOKEN LST_MARKERSYM LST_thenTOKEN LST_MARKERSYM LST_elseTOKEN . LST_MARKERSYM

    LST_MARKERSYM  shift, and go to state 61


state 59

   32 signature: domain LST_MAPSYM sortId .

    $default  reduce using rule 32 (signature)


state 60

   36 sortList: sortList LST_COMMA sortId .

    $default  reduce using rule 36 (sortList)


state 61

    7 opForm: LST_ifTOKEN LST_MARKERSYM LST_thenTOKEN LST_MARKERSYM LST_elseTOKEN LST_MARKERSYM .

    $default  reduce using rule 7 (opForm)
